{"ast":null,"code":"import React,{useState,useEffect}from'react';import Slider from'./Slider';import{Card,CardContainer,CardText,CardTitle,CardSubtitle,CardButton}from'./UniversityCard.styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UniversityCard=_ref=>{let{name,city,branch,percentile,onApply}=_ref;const[showFullName,setShowFullName]=useState(false);const[firstPart,rest]=name.split(',',2);return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardText,{children:[/*#__PURE__*/_jsxs(CardTitle,{children:[firstPart,showFullName&&`,${rest}`,!showFullName&&rest&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowFullName(true),style:{color:'blue',cursor:'pointer'},children:\".Read More\"})]}),/*#__PURE__*/_jsxs(CardSubtitle,{children:[\"Branch: \",branch]}),/*#__PURE__*/_jsxs(CardSubtitle,{children:[\"Percentile: \",percentile]})]})});};const UniversityCardList=_ref2=>{let{universities=[]}=_ref2;const[filteredUniversities,setFilteredUniversities]=useState(universities);const handleRangeChange=range=>{setFilteredUniversities(universities.filter(college=>{const roundedPercentile=Math.floor(college.percentile);return roundedPercentile>=range[0]&&roundedPercentile<=range[1];}));};useEffect(()=>{if(universities.length>0){const percentiles=universities.map(college=>Math.floor(college.percentile));const maxPercentile=Math.max(...percentiles);handleRangeChange([0,maxPercentile]);}},[universities]);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',maxWidth:'600px',marginBottom:'20px'},children:/*#__PURE__*/_jsx(Slider,{universities:universities,onRangeChange:handleRangeChange})}),/*#__PURE__*/_jsx(CardContainer,{children:Array.isArray(filteredUniversities)&&filteredUniversities.length>0?filteredUniversities.map(college=>/*#__PURE__*/_jsx(UniversityCard,{name:college['College Name'],percentile:Math.floor(college['percentile']),branch:college['Branch Name'],city:college['District'],onApply:()=>{const url=college['Website URL'];const formattedURL=url.startsWith('http://')||url.startsWith('https://')?url:`http://${url}`;window.open(formattedURL,'_blank');}},college['_id'])):/*#__PURE__*/_jsx(\"p\",{children:\"No colleges found\"})})]});};export default UniversityCardList;","map":{"version":3,"names":["React","useState","useEffect","Slider","Card","CardContainer","CardText","CardTitle","CardSubtitle","CardButton","jsx","_jsx","jsxs","_jsxs","UniversityCard","_ref","name","city","branch","percentile","onApply","showFullName","setShowFullName","firstPart","rest","split","children","onClick","style","color","cursor","UniversityCardList","_ref2","universities","filteredUniversities","setFilteredUniversities","handleRangeChange","range","filter","college","roundedPercentile","Math","floor","length","percentiles","map","maxPercentile","max","display","flexDirection","alignItems","width","maxWidth","marginBottom","onRangeChange","Array","isArray","url","formattedURL","startsWith","window","open"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/UniversityCard.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport Slider from './Slider'; \r\nimport {\r\n  Card,\r\n  CardContainer,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardButton\r\n} from './UniversityCard.styles';\r\n\r\nconst UniversityCard = ({ name, city, branch, percentile, onApply }) => {\r\n  const [showFullName, setShowFullName] = useState(false);\r\n  const [firstPart, rest] = name.split(',', 2);\r\n\r\n  return (\r\n    <Card>\r\n      <CardText>\r\n        <CardTitle>\r\n          {firstPart}\r\n          {showFullName && `,${rest}`}\r\n          {!showFullName && rest && (\r\n            <button\r\n              onClick={() => setShowFullName(true)}\r\n              style={{ color: 'blue', cursor: 'pointer' }}\r\n            >\r\n              .Read More\r\n            </button>\r\n          )}\r\n        </CardTitle>\r\n        <CardSubtitle>Branch: {branch}</CardSubtitle>\r\n        <CardSubtitle>Percentile: {percentile}</CardSubtitle>\r\n        {/* <CardButton onClick={onApply}>Apply Now</CardButton> */}\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst UniversityCardList = ({ universities = [] }) => {\r\n  const [filteredUniversities, setFilteredUniversities] = useState(universities);\r\n\r\n  const handleRangeChange = (range) => {\r\n    setFilteredUniversities(\r\n      universities.filter((college) => {\r\n        const roundedPercentile = Math.floor(college.percentile);\r\n        return (\r\n          roundedPercentile >= range[0] &&\r\n          roundedPercentile <= range[1]\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const percentiles = universities.map((college) => Math.floor(college.percentile));\r\n      const maxPercentile = Math.max(...percentiles);\r\n      handleRangeChange([0, maxPercentile]); \r\n    }\r\n  }, [universities]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {/* Slider Section */}\r\n      <div style={{ width: '100%', maxWidth: '600px', marginBottom: '20px' }}>\r\n        <Slider universities={universities} onRangeChange={handleRangeChange} />\r\n      </div>\r\n      \r\n      <CardContainer>\r\n        {Array.isArray(filteredUniversities) && filteredUniversities.length > 0 ? (\r\n          filteredUniversities.map((college) => (\r\n            <UniversityCard\r\n              key={college['_id']}\r\n              name={college['College Name']}\r\n              percentile={Math.floor(college['percentile'])} \r\n              branch={college['Branch Name']}\r\n              city={college['District']}\r\n              onApply={() => {\r\n                const url = college['Website URL'];\r\n                const formattedURL =\r\n                  url.startsWith('http://') || url.startsWith('https://')\r\n                    ? url\r\n                    : `http://${url}`;\r\n                window.open(formattedURL, '_blank');\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No colleges found</p>\r\n        )}\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversityCardList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CACjD,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,OACEC,IAAI,CACJC,aAAa,CACbC,QAAQ,CACRC,SAAS,CACTC,YAAY,CACZC,UAAU,KACL,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,IAAI,CAAEC,IAAI,CAAEC,MAAM,CAAEC,UAAU,CAAEC,OAAQ,CAAC,CAAAL,IAAA,CACjE,KAAM,CAACM,YAAY,CAAEC,eAAe,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACsB,SAAS,CAAEC,IAAI,CAAC,CAAGR,IAAI,CAACS,KAAK,CAAC,GAAG,CAAE,CAAC,CAAC,CAE5C,mBACEd,IAAA,CAACP,IAAI,EAAAsB,QAAA,cACHb,KAAA,CAACP,QAAQ,EAAAoB,QAAA,eACPb,KAAA,CAACN,SAAS,EAAAmB,QAAA,EACPH,SAAS,CACTF,YAAY,EAAI,IAAIG,IAAI,EAAE,CAC1B,CAACH,YAAY,EAAIG,IAAI,eACpBb,IAAA,WACEgB,OAAO,CAAEA,CAAA,GAAML,eAAe,CAAC,IAAI,CAAE,CACrCM,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,SAAU,CAAE,CAAAJ,QAAA,CAC7C,YAED,CAAQ,CACT,EACQ,CAAC,cACZb,KAAA,CAACL,YAAY,EAAAkB,QAAA,EAAC,UAAQ,CAACR,MAAM,EAAe,CAAC,cAC7CL,KAAA,CAACL,YAAY,EAAAkB,QAAA,EAAC,cAAY,CAACP,UAAU,EAAe,CAAC,EAE7C,CAAC,CACP,CAAC,CAEX,CAAC,CAED,KAAM,CAAAY,kBAAkB,CAAGC,KAAA,EAA2B,IAA1B,CAAEC,YAAY,CAAG,EAAG,CAAC,CAAAD,KAAA,CAC/C,KAAM,CAACE,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGlC,QAAQ,CAACgC,YAAY,CAAC,CAE9E,KAAM,CAAAG,iBAAiB,CAAIC,KAAK,EAAK,CACnCF,uBAAuB,CACrBF,YAAY,CAACK,MAAM,CAAEC,OAAO,EAAK,CAC/B,KAAM,CAAAC,iBAAiB,CAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACpB,UAAU,CAAC,CACxD,MACE,CAAAqB,iBAAiB,EAAIH,KAAK,CAAC,CAAC,CAAC,EAC7BG,iBAAiB,EAAIH,KAAK,CAAC,CAAC,CAAC,CAEjC,CAAC,CACH,CAAC,CACH,CAAC,CAEDnC,SAAS,CAAC,IAAM,CACd,GAAI+B,YAAY,CAACU,MAAM,CAAG,CAAC,CAAE,CAC3B,KAAM,CAAAC,WAAW,CAAGX,YAAY,CAACY,GAAG,CAAEN,OAAO,EAAKE,IAAI,CAACC,KAAK,CAACH,OAAO,CAACpB,UAAU,CAAC,CAAC,CACjF,KAAM,CAAA2B,aAAa,CAAGL,IAAI,CAACM,GAAG,CAAC,GAAGH,WAAW,CAAC,CAC9CR,iBAAiB,CAAC,CAAC,CAAC,CAAEU,aAAa,CAAC,CAAC,CACvC,CACF,CAAC,CAAE,CAACb,YAAY,CAAC,CAAC,CAElB,mBACEpB,KAAA,QAAKe,KAAK,CAAE,CAAEoB,OAAO,CAAE,MAAM,CAAEC,aAAa,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAxB,QAAA,eAE7Ef,IAAA,QAAKiB,KAAK,CAAE,CAAEuB,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAO,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAA3B,QAAA,cACrEf,IAAA,CAACR,MAAM,EAAC8B,YAAY,CAAEA,YAAa,CAACqB,aAAa,CAAElB,iBAAkB,CAAE,CAAC,CACrE,CAAC,cAENzB,IAAA,CAACN,aAAa,EAAAqB,QAAA,CACX6B,KAAK,CAACC,OAAO,CAACtB,oBAAoB,CAAC,EAAIA,oBAAoB,CAACS,MAAM,CAAG,CAAC,CACrET,oBAAoB,CAACW,GAAG,CAAEN,OAAO,eAC/B5B,IAAA,CAACG,cAAc,EAEbE,IAAI,CAAEuB,OAAO,CAAC,cAAc,CAAE,CAC9BpB,UAAU,CAAEsB,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,YAAY,CAAC,CAAE,CAC9CrB,MAAM,CAAEqB,OAAO,CAAC,aAAa,CAAE,CAC/BtB,IAAI,CAAEsB,OAAO,CAAC,UAAU,CAAE,CAC1BnB,OAAO,CAAEA,CAAA,GAAM,CACb,KAAM,CAAAqC,GAAG,CAAGlB,OAAO,CAAC,aAAa,CAAC,CAClC,KAAM,CAAAmB,YAAY,CAChBD,GAAG,CAACE,UAAU,CAAC,SAAS,CAAC,EAAIF,GAAG,CAACE,UAAU,CAAC,UAAU,CAAC,CACnDF,GAAG,CACH,UAAUA,GAAG,EAAE,CACrBG,MAAM,CAACC,IAAI,CAACH,YAAY,CAAE,QAAQ,CAAC,CACrC,CAAE,EAZGnB,OAAO,CAAC,KAAK,CAanB,CACF,CAAC,cAEF5B,IAAA,MAAAe,QAAA,CAAG,mBAAiB,CAAG,CACxB,CACY,CAAC,EACb,CAAC,CAEV,CAAC,CAED,cAAe,CAAAK,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}