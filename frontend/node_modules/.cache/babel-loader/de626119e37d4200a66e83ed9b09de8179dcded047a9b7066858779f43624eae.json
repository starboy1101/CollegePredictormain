{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\UniversityCard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Slider from './Slider'; // Import the Slider component\nimport { Card, CardContainer, CardText, CardTitle, CardSubtitle, CardButton } from './UniversityCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniversityCard = ({\n  name,\n  city,\n  branch,\n  percentile,\n  onApply\n}) => {\n  _s();\n  const [showFullName, setShowFullName] = useState(false);\n  const [firstPart, rest] = name.split(',', 2);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardText, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [firstPart, showFullName && `,${rest}`, !showFullName && rest && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullName(true),\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          children: \".Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"City: \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Branch: \", branch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Percentile: \", percentile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversityCard, \"fQBuZPDnX9Qoa2XVQVwlnuQ7KLU=\");\n_c = UniversityCard;\nconst UniversityCardList = ({\n  universities = []\n}) => {\n  _s2();\n  const [filteredUniversities, setFilteredUniversities] = useState(universities);\n  const handleRangeChange = range => {\n    setFilteredUniversities(universities.filter(college => {\n      const roundedPercentile = Math.floor(college.percentile);\n      return roundedPercentile >= range[0] && roundedPercentile <= range[1];\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      universities: universities,\n      onRangeChange: handleRangeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      children: Array.isArray(filteredUniversities) && filteredUniversities.length > 0 ? filteredUniversities.map(college => /*#__PURE__*/_jsxDEV(UniversityCard, {\n        name: college['College Name'],\n        percentile: Math.floor(college['percentile']) // Ensure displayed percentile is an integer\n        ,\n        branch: college['Branch Name'],\n        city: college['District'],\n        onApply: () => {\n          const url = college['Website URL'];\n          const formattedURL = url.startsWith('http://') || url.startsWith('https://') ? url : `http://${url}`;\n          window.open(formattedURL, '_blank');\n        }\n      }, college['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No colleges found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s2(UniversityCardList, \"FcMFdwiE4YvGQprtclprQt3d9VA=\");\n_c2 = UniversityCardList;\nexport default UniversityCardList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UniversityCard\");\n$RefreshReg$(_c2, \"UniversityCardList\");","map":{"version":3,"names":["React","useState","Slider","Card","CardContainer","CardText","CardTitle","CardSubtitle","CardButton","jsxDEV","_jsxDEV","UniversityCard","name","city","branch","percentile","onApply","_s","showFullName","setShowFullName","firstPart","rest","split","children","onClick","style","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","UniversityCardList","universities","_s2","filteredUniversities","setFilteredUniversities","handleRangeChange","range","filter","college","roundedPercentile","Math","floor","onRangeChange","Array","isArray","length","map","url","formattedURL","startsWith","window","open","_c2","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/UniversityCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Slider from './Slider'; // Import the Slider component\r\nimport {\r\n  Card,\r\n  CardContainer,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardButton\r\n} from './UniversityCard.styles';\r\n\r\nconst UniversityCard = ({ name, city, branch, percentile, onApply }) => {\r\n  const [showFullName, setShowFullName] = useState(false);\r\n  const [firstPart, rest] = name.split(',', 2);\r\n\r\n  return (\r\n    <Card>\r\n      <CardText>\r\n        <CardTitle>\r\n          {firstPart}\r\n          {showFullName && `,${rest}`}\r\n          {!showFullName && rest && (\r\n            <button\r\n              onClick={() => setShowFullName(true)}\r\n              style={{ color: 'blue', cursor: 'pointer' }}\r\n            >\r\n              .Read More\r\n            </button>\r\n          )}\r\n        </CardTitle>\r\n        <CardSubtitle>City: {city}</CardSubtitle>\r\n        <CardSubtitle>Branch: {branch}</CardSubtitle>\r\n        <CardSubtitle>Percentile: {percentile}</CardSubtitle>\r\n        {/* <CardButton onClick={onApply}>Apply Now</CardButton> */}\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst UniversityCardList = ({ universities = [] }) => {\r\n  const [filteredUniversities, setFilteredUniversities] = useState(universities);\r\n\r\n  const handleRangeChange = (range) => {\r\n    setFilteredUniversities(\r\n      universities.filter((college) => {\r\n        const roundedPercentile = Math.floor(college.percentile);\r\n        return (\r\n          roundedPercentile >= range[0] &&\r\n          roundedPercentile <= range[1]\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Slider universities={universities} onRangeChange={handleRangeChange} />\r\n      <CardContainer>\r\n        {Array.isArray(filteredUniversities) && filteredUniversities.length > 0 ? (\r\n          filteredUniversities.map((college) => (\r\n            <UniversityCard\r\n              key={college['_id']}\r\n              name={college['College Name']}\r\n              percentile={Math.floor(college['percentile'])} // Ensure displayed percentile is an integer\r\n              branch={college['Branch Name']}\r\n              city={college['District']}\r\n              onApply={() => {\r\n                const url = college['Website URL'];\r\n                const formattedURL =\r\n                  url.startsWith('http://') || url.startsWith('https://')\r\n                    ? url\r\n                    : `http://${url}`;\r\n                window.open(formattedURL, '_blank');\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No colleges found</p>\r\n        )}\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversityCardList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}