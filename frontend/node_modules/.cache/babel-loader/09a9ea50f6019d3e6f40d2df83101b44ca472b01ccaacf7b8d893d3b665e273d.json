{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\Slider1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './sliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  universities,\n  onRangeChange\n}) => {\n  _s();\n  const [maxRank, setMaxRank] = useState(100); // Default to 100 if no data\n  const [sliderValue, setSliderValue] = useState(100); // Initial slider value set to 100\n\n  // Calculate the maximum rank from the universities array\n  useEffect(() => {\n    if (universities.length > 0) {\n      const maxRanks = universities.map(college => {\n        const rank = college.maxRank;\n        return typeof rank === 'number' && !isNaN(rank) ? Math.floor(rank) : 0; // Default to 0 if rank is not valid\n      });\n      const computedMaxRank = Math.max(...maxRanks); // Get the highest maxRank\n      setMaxRank(computedMaxRank > 0 ? computedMaxRank : 100); // Ensure maxRank is at least 100\n      setSliderValue(prev => prev > computedMaxRank ? computedMaxRank : prev); // Adjust slider value if necessary\n    }\n  }, [universities]);\n\n  // Handle slider value change\n  const handleChange = event => {\n    const value = event.target.value;\n    setSliderValue(value);\n    onRangeChange([0, value]); // Trigger range change with updated value\n  };\n\n  // Tooltip positioning logic\n  const getTooltipStyle = () => {\n    const percent = maxRank > 0 ? sliderValue / maxRank * 100 : 0;\n    return {\n      left: `${percent}%`,\n      transform: `translateX(-${percent}%)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliderBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slidecontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: maxRank // Dynamic max based on valid maxRank values\n        ,\n        className: \"slider\",\n        value: sliderValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rangeValues\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: maxRank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        style: getTooltipStyle(),\n        children: sliderValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"7EqH3WqJ3hRVHc1F3Vofn3tEyS8=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Slider","universities","onRangeChange","_s","maxRank","setMaxRank","sliderValue","setSliderValue","length","maxRanks","map","college","rank","isNaN","Math","floor","computedMaxRank","max","prev","handleChange","event","value","target","getTooltipStyle","percent","left","transform","className","children","type","min","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Slider1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './sliderStyles.css'; \r\n\r\nconst Slider = ({ universities, onRangeChange }) => {\r\n  const [maxRank, setMaxRank] = useState(100); // Default to 100 if no data\r\n  const [sliderValue, setSliderValue] = useState(100); // Initial slider value set to 100\r\n\r\n  // Calculate the maximum rank from the universities array\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const maxRanks = universities.map((college) => {\r\n        const rank = college.maxRank;\r\n        return typeof rank === 'number' && !isNaN(rank) ? Math.floor(rank) : 0; // Default to 0 if rank is not valid\r\n      });\r\n\r\n      const computedMaxRank = Math.max(...maxRanks); // Get the highest maxRank\r\n      setMaxRank(computedMaxRank > 0 ? computedMaxRank : 100); // Ensure maxRank is at least 100\r\n      setSliderValue((prev) => (prev > computedMaxRank ? computedMaxRank : prev)); // Adjust slider value if necessary\r\n    }\r\n  }, [universities]);\r\n\r\n  // Handle slider value change\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSliderValue(value);\r\n    onRangeChange([0, value]); // Trigger range change with updated value\r\n  };\r\n\r\n  // Tooltip positioning logic\r\n  const getTooltipStyle = () => {\r\n    const percent = maxRank > 0 ? (sliderValue / maxRank) * 100 : 0;\r\n    return {\r\n      left: `${percent}%`,\r\n      transform: `translateX(-${percent}%)`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"sliderBox\">\r\n      <div className=\"slidecontainer\">\r\n        {/* Slider input */}\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max={maxRank} // Dynamic max based on valid maxRank values\r\n          className=\"slider\"\r\n          value={sliderValue}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        {/* Display the range values */}\r\n        <div className=\"rangeValues\">\r\n          <span>0</span>\r\n          <span>{maxRank}</span> {/* Safely display the max rank */}\r\n        </div>\r\n\r\n        {/* Tooltip showing current slider value */}\r\n        <div className=\"tooltip\" style={getTooltipStyle()}>\r\n          {sliderValue}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}