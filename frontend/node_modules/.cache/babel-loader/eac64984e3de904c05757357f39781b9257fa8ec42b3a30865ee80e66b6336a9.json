{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginTypeSelector = ({\n  type,\n  handleLoginTypeChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"login-type\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"student\",\n      checked: type === 'student',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"Student\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"admin\",\n      checked: type === 'admin',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"Admin\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = LoginTypeSelector;\nconst LoginForm = ({\n  isRegistering,\n  email,\n  setEmail,\n  password,\n  type,\n  setType,\n  setPassword,\n  name,\n  setName,\n  course,\n  setCourse,\n  percentile,\n  setPercentile,\n  marksheet,\n  setMarksheet,\n  college,\n  setCollege,\n  handleFormSubmit\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"login-form\",\n  children: [isRegistering && type !== 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), type === 'student' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        placeholder: \"Course\",\n        value: course,\n        onChange: e => setCourse(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"number\",\n        placeholder: \"Percentile\",\n        value: percentile,\n        onChange: e => setPercentile(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this), type !== 'admin' ? /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleFormSubmit,\n    children: isRegistering ? 'Register' : 'Login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleFormSubmit,\n    children: \"login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this);\n_c2 = LoginForm;\nconst LoginModal = () => {\n  _s();\n  const [type, setType] = useState('student');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [course, setCourse] = useState('');\n  const [college, setCollege] = useState('');\n  const [percentile, setPercentile] = useState('');\n  const [marksheet, setMarksheet] = useState(null);\n  //const [type, setType] = useState(null);\n  const navigate = useNavigate();\n  const handleLoginTypeChange = e => setType(e.target.value);\n  const handleFormSubmit = async () => {\n    if (type === 'admin' && isRegistering === true) {\n      setIsRegistering(false);\n    }\n    if (!email || !password || isRegistering !== false && (!name || type === 'student' && (!course || !percentile)) || isRegistering && (!name || type === 'college' && !college)) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    if (isRegistering) {\n      let formData = {};\n      formData.name = name;\n      formData.email = email;\n      formData.password = password;\n      formData.type = type;\n      if (college) {\n        formData.college = college;\n      }\n      if (course) {\n        formData.course = course;\n      }\n      if (percentile) {\n        formData.percentile = parseInt(percentile, 10);\n      }\n      if (marksheet) {\n        formData.marksheet = marksheet;\n      }\n      formData.id = 0;\n      try {\n        const response = await fetch('http://localhost:4000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        //alert(JSON.stringify(formData));\n        const data = await response.json();\n        if (data.success) {\n          alert('registered');\n          navigate('/'); // Redirect to login or home page\n        } else {\n          alert('Registration failed: ' + data.message);\n        }\n      } catch (error) {\n        console.error('Error during registration:', error);\n        alert('Registration failed. Please check your server logs.');\n      }\n    } else {\n      try {\n        const logindata = await loginUser({\n          email,\n          password,\n          type\n        });\n        localStorage.setItem('user', JSON.stringify(logindata.user));\n        if (logindata.success && logindata.user.type === type) {\n          switch (logindata.user.type) {\n            case 'college':\n              navigate('/college-dashboard', {\n                replace: true\n              });\n              break;\n            case 'admin':\n              navigate('/admin-dashboard', {\n                replace: true\n              });\n              break;\n            default:\n              navigate('/dashboard', {\n                replace: true\n              });\n          }\n        } else {\n          alert('Login failed! Invalid credentials.');\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        alert('Login failed. Please check your server logs.');\n      }\n    }\n  };\n  const loginUser = async userData => {\n    try {\n      const response = await fetch('http://localhost:4000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginTypeSelector, {\n      type: type,\n      handleLoginTypeChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      isRegistering: isRegistering,\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      type: type,\n      setType: setType,\n      setPassword: setPassword,\n      name: name,\n      setName: setName,\n      course: course,\n      setCourse: setCourse,\n      percentile: percentile,\n      setPercentile: setPercentile,\n      marksheet: marksheet,\n      setMarksheet: setMarksheet,\n      college: college,\n      setCollege: setCollege,\n      handleFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), type === \"admin\" && isRegistering ? /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      style: {\n        cursor: 'pointer',\n        color: '#070000',\n        textDecoration: ''\n      },\n      children: \"admin registration not allowed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: e => {\n        e.preventDefault();\n        setIsRegistering(!isRegistering);\n      },\n      style: {\n        cursor: 'pointer',\n        color: '#007bff',\n        textDecoration: 'underline'\n      },\n      children: isRegistering ? 'Already have an account? Login' : 'Are you new? Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"ZX3gVJF95Pmj+Z/+5iN9/7X9f2Y=\", false, function () {\n  return [useNavigate];\n});\n_c3 = LoginModal;\nexport default LoginModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginTypeSelector\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"LoginModal\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginTypeSelector","type","handleLoginTypeChange","className","children","value","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginForm","isRegistering","email","setEmail","password","setType","setPassword","name","setName","course","setCourse","percentile","setPercentile","marksheet","setMarksheet","college","setCollege","handleFormSubmit","required","placeholder","e","target","onClick","_c2","LoginModal","_s","setIsRegistering","navigate","alert","formData","parseInt","id","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","error","console","logindata","loginUser","localStorage","setItem","user","replace","userData","ok","Error","status","href","style","cursor","color","textDecoration","preventDefault","_c3","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginModal.css';\r\n\r\nconst LoginTypeSelector = ({ type, handleLoginTypeChange }) => (\r\n  <div className=\"login-type\">\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"student\"\r\n        checked={type === 'student'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Student\r\n    </label>\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"admin\"\r\n        checked={type === 'admin'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Admin\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst LoginForm = ({\r\nisRegistering,\r\nemail,\r\nsetEmail,\r\npassword,\r\ntype,\r\nsetType,\r\nsetPassword,\r\nname,\r\nsetName,\r\ncourse,\r\nsetCourse,\r\npercentile,\r\nsetPercentile,\r\nmarksheet,\r\nsetMarksheet,\r\ncollege,\r\nsetCollege,\r\nhandleFormSubmit\r\n}) => (\r\n  <div className=\"login-form\">\r\n    {isRegistering && type!=='admin' && (\r\n      <>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        {type === 'student' && (\r\n          <>\r\n            <input\r\n          \t  required\r\n              type=\"text\"\r\n              placeholder=\"Course\"\r\n              value={course}\r\n              onChange={(e) => setCourse(e.target.value)}\r\n            />\r\n            <input\r\n          \t  required\r\n              type=\"number\"\r\n              placeholder=\"Percentile\"\r\n              value={percentile}\r\n              onChange={(e) => setPercentile(e.target.value)}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    )}\r\n    <input\r\n\t  required\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      required\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}/>\r\n    {type!=='admin'?\r\n    <button onClick={handleFormSubmit}>\r\n      {isRegistering ? 'Register' : 'Login'}\r\n    </button>:\r\n    <button onClick={handleFormSubmit}>\r\n      login\r\n    </button>\r\n    }\r\n  </div>\r\n);\r\n\r\nconst LoginModal = () => {\r\n  const [type, setType] = useState('student');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [course, setCourse] = useState('');\r\n  const [college, setCollege] = useState('');\r\n  const [percentile, setPercentile] = useState('');\r\n  const [marksheet, setMarksheet] = useState(null);\r\n  //const [type, setType] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginTypeChange = (e) => setType(e.target.value);\r\n\r\n  const handleFormSubmit = async () => {\r\n  \tif( type=== 'admin' && isRegistering===true){\r\n  \tsetIsRegistering(false);\r\n  \t}\r\n    if (!email || !password || (isRegistering!==false && (!name || (type === 'student' && (!course || !percentile)))) || (isRegistering && (!name || (type === 'college' && (!college))))) {\r\n      alert('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    if (isRegistering) {\r\n      let formData = {};\r\n      formData.name = name;\r\n      formData.email= email;\r\n      formData.password = password;\r\n      formData.type= type;\r\n      if (college) {\r\n        formData.college= college;\r\n      }\r\n      if (course) {\r\n        formData.course = course;\r\n      }\r\n      if (percentile) {\r\n        formData.percentile = parseInt(percentile, 10);\r\n      }\r\n      if (marksheet) {\r\n        formData.marksheet=marksheet;\r\n      }\r\n      formData.id=0;\r\n      try {\r\n        const response = await fetch('http://localhost:4000/api/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        //alert(JSON.stringify(formData));\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          alert('registered');\r\n          navigate('/'); // Redirect to login or home page\r\n        } else {\r\n          alert('Registration failed: ' + data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during registration:', error);\r\n        alert('Registration failed. Please check your server logs.');\r\n      }\r\n    } else {\r\n      try {\r\n        const logindata = await loginUser({ email, password, type });\r\n        localStorage.setItem('user', JSON.stringify(logindata.user)); \r\n        if (logindata.success &&logindata.user.type===type) {\r\n          switch (logindata.user.type) {\r\n            case 'college':\r\n              navigate('/college-dashboard', { replace: true });\r\n              break;\r\n            case 'admin':\r\n              navigate('/admin-dashboard', { replace: true });\r\n              break;\r\n            default:\r\n              navigate('/dashboard', { replace: true });\r\n          }\r\n        } else {\r\n          alert('Login failed! Invalid credentials.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during login:', error);\r\n        alert('Login failed. Please check your server logs.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/login', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json'\r\n         },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal\">\r\n      <h2>{isRegistering ? 'Register' : 'Login'}</h2>\r\n      <LoginTypeSelector type={type} handleLoginTypeChange={handleLoginTypeChange} />\r\n      <LoginForm\r\n        isRegistering={isRegistering}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        password={password}\r\n        type={type}\r\n        setType = {setType}\r\n        setPassword={setPassword}\r\n        name={name}\r\n        setName={setName}\r\n        course={course}\r\n        setCourse={setCourse}\r\n        percentile={percentile}\r\n        setPercentile={setPercentile}\r\n        marksheet={marksheet}\r\n        setMarksheet={setMarksheet}\r\n        college={college}\r\n        setCollege={setCollege}\r\n        handleFormSubmit={handleFormSubmit}\r\n      />\r\n      {type===\"admin\" && isRegistering?\r\n      <a\r\n  href=\"/\"\r\n  style={{ cursor: 'pointer', color: '#070000', textDecoration: '' }} \r\n>\r\n  admin registration not allowed\r\n</a>:\r\n      <a\r\n  href=\"/\"\r\n  onClick={(e) => {\r\n    e.preventDefault(); \r\n    setIsRegistering(!isRegistering); \r\n  }}\r\n  style={{ cursor: 'pointer', color: '#007bff', textDecoration: 'underline' }} \r\n>\r\n  {isRegistering ? 'Already have an account? Login' : 'Are you new? Register'}\r\n</a>\r\n}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}