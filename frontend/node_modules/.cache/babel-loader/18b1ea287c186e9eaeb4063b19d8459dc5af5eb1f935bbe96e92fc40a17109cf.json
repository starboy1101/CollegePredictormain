{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\FundsTabs2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Tab, Tabs, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport FundCards from \"./UniversityCard\";\nimport SectionTitle from \"./SectionTitle\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FundsTabs({\n  universities\n}) {\n  _s();\n  const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\n  const docRef = useRef(null);\n  const selectedUniversity = universities[0];\n  const logoRight = `${process.env.PUBLIC_URL}/VidyarthiMitra.org Logo4.png`;\n  const newLogo = `${process.env.PUBLIC_URL}/VidyarthiMitra.org Logo4.png`; // Update with your new logo path\n\n  const handleGeneratePDF = () => {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    docRef.current = doc;\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const addHeader = () => {\n      doc.addImage(logoRight, 'PNG', pageWidth - 140, 10, 130, 50);\n    };\n    const addFirstPageContent = () => {\n      doc.setFontSize(16);\n      const titleParts = 'Indiaâ€™s Leading Educational Web Portal & App'.split('Educational');\n      const centerX = pageWidth / 2;\n\n      // First part of the title\n      doc.text(titleParts[0], centerX - doc.getTextWidth(titleParts[0], {\n        size: 16\n      }) / 2, 70);\n\n      // Set color to red for \"Educational\"\n      doc.setTextColor(255, 0, 0);\n      doc.text('Educational', centerX - doc.getTextWidth('Educational', {\n        size: 16\n      }) / 2 + doc.getTextWidth(titleParts[0]), 70);\n\n      // Reset color to black for the rest of the title\n      doc.setTextColor(0, 0, 0);\n      doc.text(titleParts[1], centerX - doc.getTextWidth(titleParts[1], {\n        size: 16\n      }) / 2 + doc.getTextWidth(titleParts[0]) + doc.getTextWidth('Educational'), 70);\n      doc.addImage(newLogo, 'PNG', centerX - 145, 75, 300, 85);\n      doc.setFontSize(14);\n\n      // Set color to red for \"Mock Exams\" and \"Abroad\"\n      const subtitle1 = 'Counselling | Admissions | KG to PG | Aptitude Tests';\n      const subtitle2 = 'Mock Exams | Jobs | Skills | India | Abroad';\n      const subtitleY = 165;\n      doc.setTextColor(0, 0, 0); // Reset color to black for subtitle1\n      doc.text(subtitle1, centerX - doc.getTextWidth(subtitle1, {\n        size: 14\n      }) / 2, subtitleY);\n\n      // Change color for \"Mock Exams\"\n      const mockExamsIndex = subtitle2.indexOf('Mock Exams');\n      if (mockExamsIndex !== -1) {\n        doc.setTextColor(255, 0, 0); // Set color to red\n        doc.text('Mock Exams', centerX - doc.getTextWidth(subtitle2, {\n          size: 14\n        }) / 2 + mockExamsIndex * 10, subtitleY + 15); // Adjust position\n        doc.setTextColor(0, 0, 0); // Reset color to black for the rest of the subtitle\n      }\n\n      // Display the rest of subtitle2\n      doc.text(subtitle2.replace('Mock Exams | ', ''), centerX - doc.getTextWidth(subtitle2.replace('Mock Exams | ', ''), {\n        size: 14\n      }) / 2 + mockExamsIndex * 10 + doc.getTextWidth('Mock Exams', {\n        size: 14\n      }), subtitleY + 15);\n\n      // Change color for \"Abroad\"\n      const abroadIndex = subtitle2.indexOf('Abroad');\n      if (abroadIndex !== -1) {\n        doc.setTextColor(255, 0, 0); // Set color to red\n        doc.text('Abroad', centerX - doc.getTextWidth('Abroad', {\n          size: 14\n        }) / 2 + abroadIndex * 10, subtitleY + 15);\n      }\n\n      // Reset color to black for remaining text\n      doc.setTextColor(0, 0, 0);\n      doc.text(subtitle1, centerX - doc.getTextWidth(subtitle1, {\n        size: 12\n      }) / 2, subtitleY);\n      doc.text(subtitle2, centerX - doc.getTextWidth(subtitle2, {\n        size: 12\n      }) / 2, subtitleY + 15);\n      doc.text('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', centerX - doc.getTextWidth('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', {\n        size: 12\n      }) / 2, subtitleY + 30);\n      doc.setDrawColor(0, 0, 0);\n      doc.setLineWidth(1);\n      doc.line(40, subtitleY + 55, pageWidth - 40, subtitleY + 55);\n      const lineHeight = 20;\n      doc.setFontSize(12);\n      doc.setFont(undefined, 'bold');\n      doc.text(`Student Name: Rakhi`, 40, subtitleY + 75);\n      doc.text(`Course Preferences: ${selectedUniversity['Branch Name']}`, 40, subtitleY + 75 + lineHeight);\n      doc.text(`City Preference: ${selectedUniversity['District']}`, 40, subtitleY + 75 + lineHeight * 2);\n      doc.text(`MHT-CET Score: ${selectedUniversity['percentile']}`, 40, subtitleY + 75 + lineHeight * 3);\n      doc.setFont(undefined, 'normal');\n      const preferencesTitle = `${selectedUniversity['District']} College Preferences List`;\n      doc.setFontSize(14);\n      doc.setFont(undefined, 'bold');\n      doc.text(preferencesTitle, centerX - doc.getTextWidth(preferencesTitle, {\n        size: 14\n      }) / 2, subtitleY + 75 + lineHeight * 4);\n      doc.setFont(undefined, 'normal');\n      const textWidth = doc.getTextWidth(preferencesTitle);\n      const underlineY = subtitleY + 75 + lineHeight * 4 + 5; // Adjust for underline position\n      doc.setDrawColor(0); // Set line color\n      doc.setLineWidth(1.5); // Set line width\n      doc.line(centerX - textWidth / 1.9, underlineY, centerX + textWidth / 1.9, underlineY);\n    };\n\n    // Add content\n    addHeader();\n    addFirstPageContent();\n    const startY = doc.lastAutoTable.finalY + 20;\n\n    // Check if universities have data\n    if (universities.length === 0) {\n      doc.text(\"No university data available.\", 40, startY);\n    } else {\n      const columns = [{\n        header: 'Sr.No',\n        dataKey: 'srNo'\n      }, {\n        header: 'College Code',\n        dataKey: 'collegeCode'\n      }, {\n        header: 'College Name',\n        dataKey: 'collegeName'\n      }, {\n        header: 'Address',\n        dataKey: 'address'\n      }, {\n        header: 'Status',\n        dataKey: 'status'\n      }, {\n        header: 'District',\n        dataKey: 'district'\n      }];\n      const rows = universities.map((college, index) => ({\n        srNo: index + 1,\n        collegeCode: college['college code'],\n        collegeName: college['College Name'],\n        address: college['Address'],\n        status: college['Institute Status'],\n        district: college['District']\n      }));\n      doc.autoTable({\n        startY: 330,\n        head: [columns.map(col => col.header)],\n        body: rows.map(row => columns.map(col => row[col.dataKey])),\n        margin: {\n          top: 70\n        },\n        didDrawPage: data => {\n          addHeader();\n          const currentPageY = doc.internal.getCurrentPageInfo().pageHeight;\n          if (currentPageY - data.cursor.y < 100) {\n            doc.addPage();\n          }\n          if (doc.lastAutoTable) {\n            const tableWidth = doc.lastAutoTable.previous.width;\n            const startX = data.table.startX;\n            const startY = data.cursor.y;\n            const tableHeight = doc.lastAutoTable.finalY - startY + data.table.height;\n            if (tableWidth > 0 && tableHeight > 0) {\n              doc.setDrawColor(0);\n              doc.setLineWidth(0.5);\n              doc.rect(startX, startY - data.table.height, tableWidth, tableHeight);\n            }\n          }\n          const pageNumber = doc.internal.getNumberOfPages(); // Get the total number of pages\n          const text = `Page ${data.pageCount} of ${pageNumber}`; // Page number text\n          const textWidth = doc.getTextWidth(text);\n          const pageWidth = doc.internal.pageSize.getWidth();\n\n          // Set position for the page number\n          const x = pageWidth - textWidth - 10; // Right-aligned with a margin\n          const y = currentPageY - 10; // 10 units from bottom\n\n          if (!isNaN(x) && !isNaN(y)) {\n            doc.setFontSize(12);\n            doc.text(text, x, y); // Add page number text\n          }\n        },\n        didDrawCell: data => {\n          const {\n            width,\n            height\n          } = data.cell;\n          if (data.cell) {\n            doc.setDrawColor(0);\n            doc.setLineWidth(0.5);\n            doc.rect(data.cell.x, data.cell.y, width, height);\n          }\n        }\n      });\n    }\n    const footerText = 'Note: The above list is not an allotment or admission list. It is just predictions based on score, category, previous year trending cut-offs, Institute or College status, all ranks and many other parameters.';\n    const maxWidth = pageWidth - 80;\n    const footerLines = doc.splitTextToSize(footerText, maxWidth);\n    const footerY = doc.internal.pageSize.height - 60;\n    footerLines.forEach((line, index) => {\n      doc.text(line, 40, footerY + index * 15);\n    });\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n    setPdfPreviewUrl(pdfUrl);\n  };\n  const handleDownloadPDF = () => {\n    if (docRef.current) {\n      docRef.current.save('Filtered_Colleges_List.pdf'); // Download the saved PDF\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      className: \"sm:mt-0 mt-14\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-8 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          title: \"Most Popular Colleges\",\n          classes: \"text-center text-2xl font-bold sm:text-3xl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-end sm:justify-center sm:pr-0 pr-4 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-[15px] font-bold py-2 px-4 bg-green-500 text-white rounded\",\n            onClick: handleGeneratePDF,\n            children: \"Preview PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: universities.length > 0 ? /*#__PURE__*/_jsxDEV(FundCards, {\n            universities: universities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-600\",\n            children: \"No colleges found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), pdfPreviewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg relative max-w-3xl w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-2 right-2 text-gray-500 hover:text-gray-800\",\n          onClick: () => setPdfPreviewUrl(null),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"PDF Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: pdfPreviewUrl,\n          width: \"100%\",\n          height: \"500px\",\n          title: \"PDF Preview\",\n          className: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-[15px] font-bold py-2 px-4 bg-blue-500 text-white rounded\",\n            onClick: handleDownloadPDF,\n            children: \"Download PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(FundsTabs, \"TSkMBUa6VTJqHDkiuobMSU77jhE=\");\n_c = FundsTabs;\nvar _c;\n$RefreshReg$(_c, \"FundsTabs\");","map":{"version":3,"names":["React","useState","useRef","Tab","Tabs","TabPanel","FundCards","SectionTitle","jsPDF","jsxDEV","_jsxDEV","FundsTabs","universities","_s","pdfPreviewUrl","setPdfPreviewUrl","docRef","selectedUniversity","logoRight","process","env","PUBLIC_URL","newLogo","handleGeneratePDF","doc","current","pageWidth","internal","pageSize","getWidth","addHeader","addImage","addFirstPageContent","setFontSize","titleParts","split","centerX","text","getTextWidth","size","setTextColor","subtitle1","subtitle2","subtitleY","mockExamsIndex","indexOf","replace","abroadIndex","setDrawColor","setLineWidth","line","lineHeight","setFont","undefined","preferencesTitle","textWidth","underlineY","startY","lastAutoTable","finalY","length","columns","header","dataKey","rows","map","college","index","srNo","collegeCode","collegeName","address","status","district","autoTable","head","col","body","row","margin","top","didDrawPage","data","currentPageY","getCurrentPageInfo","pageHeight","cursor","y","addPage","tableWidth","previous","width","startX","table","tableHeight","height","rect","pageNumber","getNumberOfPages","pageCount","x","isNaN","didDrawCell","cell","footerText","maxWidth","footerLines","splitTextToSize","footerY","forEach","pdfBlob","output","pdfUrl","URL","createObjectURL","handleDownloadPDF","save","children","className","title","classes","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/FundsTabs2.jsx"],"sourcesContent":["import React, { useState, useRef  } from \"react\";\r\nimport { Tab, Tabs, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport FundCards from \"./UniversityCard\";\r\nimport SectionTitle from \"./SectionTitle\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport default function FundsTabs({ universities }) {\r\n  const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\r\n  const docRef = useRef(null);\r\n\r\n  const selectedUniversity = universities[0];\r\n\r\n  const logoRight = `${process.env.PUBLIC_URL}/VidyarthiMitra.org Logo4.png`; \r\n  const newLogo = `${process.env.PUBLIC_URL}/VidyarthiMitra.org Logo4.png`; // Update with your new logo path\r\n\r\n  const handleGeneratePDF = () => {\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    docRef.current = doc;\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n    \r\n    const addHeader = () => {\r\n      doc.addImage(logoRight, 'PNG', pageWidth - 140, 10, 130, 50); \r\n    };\r\n  \r\n    const addFirstPageContent = () => {\r\n      doc.setFontSize(16);\r\n      const titleParts = 'Indiaâ€™s Leading Educational Web Portal & App'.split('Educational');\r\n      const centerX = pageWidth / 2;\r\n    \r\n      // First part of the title\r\n      doc.text(titleParts[0], centerX - doc.getTextWidth(titleParts[0], { size: 16 }) / 2, 70);\r\n    \r\n      // Set color to red for \"Educational\"\r\n      doc.setTextColor(255, 0, 0);\r\n      doc.text('Educational', centerX - doc.getTextWidth('Educational', { size: 16 }) / 2 + doc.getTextWidth(titleParts[0]), 70);\r\n    \r\n      // Reset color to black for the rest of the title\r\n      doc.setTextColor(0, 0, 0);\r\n      doc.text(titleParts[1], centerX - doc.getTextWidth(titleParts[1], { size: 16 }) / 2 + doc.getTextWidth(titleParts[0]) + doc.getTextWidth('Educational'), 70);\r\n    \r\n      doc.addImage(newLogo, 'PNG', centerX - 145, 75, 300, 85);\r\n    \r\n      doc.setFontSize(14);\r\n      \r\n      // Set color to red for \"Mock Exams\" and \"Abroad\"\r\n      const subtitle1 = 'Counselling | Admissions | KG to PG | Aptitude Tests';\r\n      const subtitle2 = 'Mock Exams | Jobs | Skills | India | Abroad';\r\n      const subtitleY = 165;\r\n    \r\n      doc.setTextColor(0, 0, 0); // Reset color to black for subtitle1\r\n      doc.text(subtitle1, centerX - doc.getTextWidth(subtitle1, { size: 14 }) / 2, subtitleY);\r\n      \r\n      // Change color for \"Mock Exams\"\r\n      const mockExamsIndex = subtitle2.indexOf('Mock Exams');\r\n      if (mockExamsIndex !== -1) {\r\n        doc.setTextColor(255, 0, 0); // Set color to red\r\n        doc.text('Mock Exams', centerX - doc.getTextWidth(subtitle2, { size: 14 }) / 2 + mockExamsIndex * 10, subtitleY + 15); // Adjust position\r\n        doc.setTextColor(0, 0, 0); // Reset color to black for the rest of the subtitle\r\n      }\r\n      \r\n      // Display the rest of subtitle2\r\n      doc.text(subtitle2.replace('Mock Exams | ', ''), centerX - doc.getTextWidth(subtitle2.replace('Mock Exams | ', ''), { size: 14 }) / 2 + mockExamsIndex * 10 + doc.getTextWidth('Mock Exams', { size: 14 }), subtitleY + 15);\r\n    \r\n      // Change color for \"Abroad\"\r\n      const abroadIndex = subtitle2.indexOf('Abroad');\r\n      if (abroadIndex !== -1) {\r\n        doc.setTextColor(255, 0, 0); // Set color to red\r\n        doc.text('Abroad', centerX - doc.getTextWidth('Abroad', { size: 14 }) / 2 + abroadIndex * 10, subtitleY + 15);\r\n      }\r\n    \r\n      // Reset color to black for remaining text\r\n      doc.setTextColor(0, 0, 0);\r\n  \r\n      doc.text(subtitle1, centerX - doc.getTextWidth(subtitle1, { size: 12 }) / 2, subtitleY);\r\n      doc.text(subtitle2, centerX - doc.getTextWidth(subtitle2, { size: 12 }) / 2, subtitleY + 15);\r\n      \r\n      doc.text('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', centerX - doc.getTextWidth('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', { size: 12 }) / 2, subtitleY + 30);\r\n      \r\n      doc.setDrawColor(0, 0, 0);\r\n      doc.setLineWidth(1);\r\n      doc.line(40, subtitleY + 55, pageWidth - 40, subtitleY + 55);\r\n      \r\n      const lineHeight = 20; \r\n      doc.setFontSize(12);\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text(`Student Name: Rakhi`, 40, subtitleY + 75);\r\n      doc.text(`Course Preferences: ${selectedUniversity['Branch Name']}`, 40, subtitleY + 75 + lineHeight);\r\n      doc.text(`City Preference: ${selectedUniversity['District']}`, 40, subtitleY + 75 + lineHeight * 2);\r\n      doc.text(`MHT-CET Score: ${selectedUniversity['percentile']}`, 40, subtitleY + 75 + lineHeight * 3);\r\n      doc.setFont(undefined, 'normal');\r\n      \r\n      const preferencesTitle = `${selectedUniversity['District']} College Preferences List`;\r\n      doc.setFontSize(14);\r\n      doc.setFont(undefined, 'bold');\r\n      doc.text(preferencesTitle, centerX - doc.getTextWidth(preferencesTitle, { size: 14 }) / 2, subtitleY + 75 + lineHeight * 4);\r\n      doc.setFont(undefined, 'normal');\r\n\r\n      const textWidth = doc.getTextWidth(preferencesTitle);\r\n      const underlineY = subtitleY + 75 + lineHeight * 4 + 5; // Adjust for underline position\r\n      doc.setDrawColor(0); // Set line color\r\n      doc.setLineWidth(1.5); // Set line width\r\n      doc.line(centerX - textWidth / 1.9, underlineY, centerX + textWidth / 1.9, underlineY); \r\n    };\r\n  \r\n    // Add content\r\n    addHeader();\r\n    addFirstPageContent();\r\n  \r\n    const startY = doc.lastAutoTable.finalY + 20; \r\n  \r\n    // Check if universities have data\r\n    if (universities.length === 0) {\r\n      doc.text(\"No university data available.\", 40, startY);\r\n    } else {\r\n      const columns = [\r\n        { header: 'Sr.No', dataKey: 'srNo' },\r\n        { header: 'College Code', dataKey: 'collegeCode' },\r\n        { header: 'College Name', dataKey: 'collegeName' },\r\n        { header: 'Address', dataKey: 'address' },\r\n        { header: 'Status', dataKey: 'status' },\r\n        { header: 'District', dataKey: 'district' }\r\n      ];\r\n  \r\n      const rows = universities.map((college, index) => ({\r\n        srNo: index + 1,\r\n        collegeCode: college['college code'], \r\n        collegeName: college['College Name'],\r\n        address: college['Address'], \r\n        status: college['Institute Status'], \r\n        district: college['District'] \r\n      }));\r\n  \r\n      doc.autoTable({\r\n        startY: 330,\r\n        head: [columns.map(col => col.header)],\r\n        body: rows.map(row => columns.map(col => row[col.dataKey])),\r\n        margin: { top: 70 },\r\n        didDrawPage: (data) => {\r\n          addHeader(); \r\n          const currentPageY = doc.internal.getCurrentPageInfo().pageHeight;\r\n\r\n          if (currentPageY - data.cursor.y < 100) {\r\n            doc.addPage();\r\n          }\r\n      \r\n          if (doc.lastAutoTable) {\r\n            const tableWidth = doc.lastAutoTable.previous.width; \r\n            const startX = data.table.startX; \r\n            const startY = data.cursor.y;\r\n            const tableHeight = doc.lastAutoTable.finalY - startY + data.table.height;\r\n      \r\n            if (tableWidth > 0 && tableHeight > 0) {\r\n              doc.setDrawColor(0); \r\n              doc.setLineWidth(0.5); \r\n              \r\n              doc.rect(startX, startY - data.table.height, tableWidth, tableHeight);\r\n            }\r\n          }\r\n          const pageNumber = doc.internal.getNumberOfPages(); // Get the total number of pages\r\n          const text = `Page ${data.pageCount} of ${pageNumber}`; // Page number text\r\n          const textWidth = doc.getTextWidth(text);\r\n          const pageWidth = doc.internal.pageSize.getWidth();\r\n      \r\n          // Set position for the page number\r\n          const x = pageWidth - textWidth - 10; // Right-aligned with a margin\r\n          const y = currentPageY - 10; // 10 units from bottom\r\n      \r\n          if (!isNaN(x) && !isNaN(y)) {\r\n            doc.setFontSize(12);\r\n            doc.text(text, x, y); // Add page number text\r\n          }\r\n        },\r\n        didDrawCell: (data) => {\r\n          const { width, height } = data.cell;\r\n          if (data.cell) {\r\n            doc.setDrawColor(0);\r\n            doc.setLineWidth(0.5); \r\n            doc.rect(data.cell.x, data.cell.y, width, height);\r\n          }\r\n        }\r\n      });                 \r\n    }\r\n\r\n    const footerText = 'Note: The above list is not an allotment or admission list. It is just predictions based on score, category, previous year trending cut-offs, Institute or College status, all ranks and many other parameters.';\r\n    const maxWidth = pageWidth - 80;\r\n    const footerLines = doc.splitTextToSize(footerText, maxWidth);\r\n    const footerY = doc.internal.pageSize.height - 60; \r\n\r\n    footerLines.forEach((line, index) => {\r\n      doc.text(line, 40, footerY + (index * 15))\r\n    });\r\n\r\n    const pdfBlob = doc.output('blob');\r\n    const pdfUrl = URL.createObjectURL(pdfBlob);\r\n    setPdfPreviewUrl(pdfUrl);\r\n  };  \r\n\r\n  const handleDownloadPDF = () => {\r\n    if (docRef.current) {\r\n      docRef.current.save('Filtered_Colleges_List.pdf'); // Download the saved PDF\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tabs className=\"sm:mt-0 mt-14\">\r\n        <div className=\"my-8 flex flex-col items-center\">\r\n          <SectionTitle\r\n            title=\"Most Popular Colleges\"\r\n            classes=\"text-center text-2xl font-bold sm:text-3xl\"\r\n          />\r\n          <div className=\"w-full flex justify-end sm:justify-center sm:pr-0 pr-4 mt-4\">\r\n            <button\r\n              className=\"text-[15px] font-bold py-2 px-4 bg-green-500 text-white rounded\"\r\n              onClick={handleGeneratePDF}\r\n            >\r\n              Preview PDF\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <TabPanel>\r\n          <div className=\"flex justify-center\">\r\n            {universities.length > 0 ? (\r\n              <FundCards universities={universities} />\r\n            ) : (\r\n              <p className=\"text-center text-gray-600\">No colleges found</p>\r\n            )}\r\n          </div>\r\n        </TabPanel>\r\n      </Tabs>\r\n\r\n      {pdfPreviewUrl && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-lg relative max-w-3xl w-full\">\r\n            <button\r\n              className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-800\"\r\n              onClick={() => setPdfPreviewUrl(null)}\r\n            >\r\n              âœ–\r\n            </button>\r\n            <h2 className=\"text-xl font-bold mb-4\">PDF Preview</h2>\r\n            <iframe\r\n              src={pdfPreviewUrl}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n              title=\"PDF Preview\"\r\n              className=\"border\"\r\n            />\r\n            <div className=\"text-right mt-4\">\r\n              <button\r\n                className=\"text-[15px] font-bold py-2 px-4 bg-blue-500 text-white rounded\"\r\n                onClick={handleDownloadPDF}\r\n              >\r\n                Download PDF\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}