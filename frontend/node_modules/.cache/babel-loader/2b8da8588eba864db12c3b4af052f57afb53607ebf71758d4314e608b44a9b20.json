{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\UniversityCard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactSlider from 'react-slider';\nimport { sliderStyles } from './styles'; // Import slider styles\nimport { Card, CardContainer, CardText, CardTitle, CardSubtitle, CardButton } from './UniversityCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniversityCard = ({\n  name,\n  city,\n  branch,\n  percentile,\n  onApply\n}) => {\n  _s();\n  const [showFullName, setShowFullName] = useState(false);\n  const [firstPart, rest] = name.split(',', 2);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardText, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [firstPart, showFullName && `,${rest}`, !showFullName && rest && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullName(true),\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          children: \".Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"City: \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Branch: \", branch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Percentile: \", percentile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversityCard, \"fQBuZPDnX9Qoa2XVQVwlnuQ7KLU=\");\n_c = UniversityCard;\nconst UniversityCardList = ({\n  universities = []\n}) => {\n  _s2();\n  const [percentileRange, setPercentileRange] = useState([0, 100]);\n  useEffect(() => {\n    if (universities.length > 0) {\n      const percentiles = universities.map(college => Math.floor(college.percentile));\n      const minPercentile = Math.min(...percentiles);\n      const maxPercentile = Math.max(...percentiles);\n      setPercentileRange([minPercentile, maxPercentile]);\n    }\n  }, [universities]);\n  const handleSliderChange = value => {\n    // Set the same value for both min and max to create a single handle slider effect\n    setPercentileRange([value, value]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: sliderStyles.container,\n      children: /*#__PURE__*/_jsxDEV(ReactSlider, {\n        min: percentileRange[0],\n        max: percentileRange[1],\n        value: percentileRange[1] // Use the same value for min and max\n        ,\n        onChange: handleSliderChange // Handle slider change\n        ,\n        renderTrack: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...props,\n          style: sliderStyles.track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this),\n        renderThumb: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...props,\n          style: sliderStyles.thumb\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: sliderStyles.rangeValues,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: percentileRange[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: percentileRange[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      children: Array.isArray(universities) && universities.length > 0 ? universities.filter(college => {\n        const roundedPercentile = Math.floor(college.percentile);\n        return roundedPercentile >= percentileRange[0] && roundedPercentile <= percentileRange[1];\n      }).map(college => /*#__PURE__*/_jsxDEV(UniversityCard, {\n        name: college['College Name'],\n        percentile: Math.floor(college['percentile']) // Ensure displayed percentile is an integer\n        ,\n        branch: college['Branch Name'],\n        city: college['District'],\n        onApply: () => {\n          const url = college['Website URL'];\n          const formattedURL = url.startsWith('http://') || url.startsWith('https://') ? url : `http://${url}`;\n          window.open(formattedURL, '_blank');\n        }\n      }, college['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No colleges found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s2(UniversityCardList, \"I+JnBVxPeBo8Nb6AorgX3Aaal38=\");\n_c2 = UniversityCardList;\nexport default UniversityCardList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UniversityCard\");\n$RefreshReg$(_c2, \"UniversityCardList\");","map":{"version":3,"names":["React","useState","useEffect","ReactSlider","sliderStyles","Card","CardContainer","CardText","CardTitle","CardSubtitle","CardButton","jsxDEV","_jsxDEV","UniversityCard","name","city","branch","percentile","onApply","_s","showFullName","setShowFullName","firstPart","rest","split","children","onClick","style","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","UniversityCardList","universities","_s2","percentileRange","setPercentileRange","length","percentiles","map","college","Math","floor","minPercentile","min","maxPercentile","max","handleSliderChange","value","container","onChange","renderTrack","props","track","renderThumb","thumb","rangeValues","Array","isArray","filter","roundedPercentile","url","formattedURL","startsWith","window","open","_c2","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/UniversityCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactSlider from 'react-slider';\r\nimport { sliderStyles } from './styles'; // Import slider styles\r\nimport {\r\n  Card,\r\n  CardContainer,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardButton\r\n} from './UniversityCard.styles';\r\n\r\nconst UniversityCard = ({ name, city, branch, percentile, onApply }) => {\r\n  const [showFullName, setShowFullName] = useState(false);\r\n  const [firstPart, rest] = name.split(',', 2);\r\n\r\n  return (\r\n    <Card>\r\n      <CardText>\r\n        <CardTitle>\r\n          {firstPart} \r\n          {showFullName && `,${rest}`} \r\n          {!showFullName && rest && (\r\n            <button\r\n              onClick={() => setShowFullName(true)}\r\n              style={{ color: 'blue', cursor: 'pointer' }}\r\n            >\r\n              .Read More\r\n            </button>\r\n          )}\r\n        </CardTitle>\r\n        <CardSubtitle>City: {city}</CardSubtitle>\r\n        <CardSubtitle>Branch: {branch}</CardSubtitle>\r\n        <CardSubtitle>Percentile: {percentile}</CardSubtitle>\r\n        {/* <CardButton onClick={onApply}>Apply Now</CardButton> */}\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst UniversityCardList = ({ universities = [] }) => {\r\n  const [percentileRange, setPercentileRange] = useState([0, 100]);\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const percentiles = universities.map((college) => Math.floor(college.percentile));\r\n      const minPercentile = Math.min(...percentiles);\r\n      const maxPercentile = Math.max(...percentiles);\r\n      setPercentileRange([minPercentile, maxPercentile]);\r\n    }\r\n  }, [universities]);\r\n\r\n  const handleSliderChange = (value) => {\r\n    // Set the same value for both min and max to create a single handle slider effect\r\n    setPercentileRange([value, value]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={sliderStyles.container}>\r\n        <ReactSlider\r\n          min={percentileRange[0]}\r\n          max={percentileRange[1]}\r\n          value={percentileRange[1]} // Use the same value for min and max\r\n          onChange={handleSliderChange} // Handle slider change\r\n          renderTrack={(props) => <div {...props} style={sliderStyles.track} />}\r\n          renderThumb={(props) => <div {...props} style={sliderStyles.thumb} />}\r\n        />\r\n      </div>\r\n      <div style={sliderStyles.rangeValues}>\r\n        <span>{percentileRange[0]}</span>\r\n        <span>{percentileRange[1]}</span>\r\n      </div>\r\n      <CardContainer>\r\n        {Array.isArray(universities) && universities.length > 0 ? (\r\n          universities\r\n            .filter((college) => {\r\n              const roundedPercentile = Math.floor(college.percentile);\r\n              return (\r\n                roundedPercentile >= percentileRange[0] &&\r\n                roundedPercentile <= percentileRange[1]\r\n              );\r\n            })\r\n            .map((college) => (\r\n              <UniversityCard\r\n                key={college['_id']}\r\n                name={college['College Name']}\r\n                percentile={Math.floor(college['percentile'])} // Ensure displayed percentile is an integer\r\n                branch={college['Branch Name']}\r\n                city={college['District']}\r\n                onApply={() => {\r\n                  const url = college['Website URL'];\r\n                  const formattedURL =\r\n                    url.startsWith('http://') || url.startsWith('https://')\r\n                      ? url\r\n                      : `http://${url}`;\r\n                  window.open(formattedURL, '_blank');\r\n                }}\r\n              />\r\n            ))\r\n        ) : (\r\n          <p>No colleges found</p>\r\n        )}\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversityCardList;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}