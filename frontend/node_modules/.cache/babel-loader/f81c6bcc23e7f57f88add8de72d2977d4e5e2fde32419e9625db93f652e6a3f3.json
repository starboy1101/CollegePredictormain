{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";class ErrorBoundary extends React.Component{constructor(props){super(props);this.state={hasError:false};}static getDerivedStateFromError(error){return{hasError:true};}componentDidCatch(error,errorInfo){console.error(\"Error caught by ErrorBoundary: \",error,errorInfo);}render(){if(this.state.hasError){return/*#__PURE__*/_jsx(\"h1\",{children:\"Something went wrong.\"});}return this.props.children;}}export default ErrorBoundary;","map":{"version":3,"names":["React","jsx","_jsx","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","console","render","children"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/ErrorBoundary.js"],"sourcesContent":["import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\"Error caught by ErrorBoundary: \", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children; \r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,aAAa,QAAS,CAAAH,KAAK,CAACI,SAAU,CAC1CC,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CACZ,IAAI,CAACC,KAAK,CAAG,CAAEC,QAAQ,CAAE,KAAM,CAAC,CAClC,CAEA,MAAO,CAAAC,wBAAwBA,CAACC,KAAK,CAAE,CACrC,MAAO,CAAEF,QAAQ,CAAE,IAAK,CAAC,CAC3B,CAEAG,iBAAiBA,CAACD,KAAK,CAAEE,SAAS,CAAE,CAClCC,OAAO,CAACH,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAEE,SAAS,CAAC,CACpE,CAEAE,MAAMA,CAAA,CAAG,CACP,GAAI,IAAI,CAACP,KAAK,CAACC,QAAQ,CAAE,CACvB,mBAAON,IAAA,OAAAa,QAAA,CAAI,uBAAqB,CAAI,CAAC,CACvC,CAEA,MAAO,KAAI,CAACT,KAAK,CAACS,QAAQ,CAC5B,CACF,CAEA,cAAe,CAAAZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}