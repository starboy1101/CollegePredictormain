{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\FundsTabs2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Tab, Tabs, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport FundCards from \"./UniversityCard\";\nimport SectionTitle from \"./SectionTitle\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FundsTabs({\n  universities\n}) {\n  _s();\n  const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\n\n  // Base64 or URL of your images\n  const logoLeft = `${process.env.PUBLIC_URL}/logo192.png`; // Replace with your base64 string for the left logo\n  const logoRight = `${process.env.PUBLIC_URL}/logo192.png`;\n  const newImage = `${process.env.PUBLIC_URL}/logo192.png`; // Replace with your base64 string for the right logo\n\n  const handleGeneratePDF = () => {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    const pageWidth = doc.internal.pageSize.getWidth();\n\n    // Function to add header with logos on each page\n    const addHeader = () => {\n      // Add left logo\n      doc.addImage(logoLeft, 'PNG', 40, 10, 50, 50); // Adjust position and size as needed\n      // Add right logo\n      doc.addImage(logoRight, 'PNG', pageWidth - 90, 10, 50, 50); // Adjust position and size as needed\n\n      // Set font size for title\n      doc.setFontSize(16);\n      const title = 'Indiaâ€™s Leading Educational Web Portal & App';\n      const titleWidth = doc.getTextWidth(title, {\n        size: 16\n      });\n      const centerX = doc.internal.pageSize.getWidth() / 2;\n      doc.text(title, centerX - titleWidth / 2, 70);\n\n      // Add the new image below the title\n      const newImageY = 85; // Adjust y-coordinate as needed\n      doc.addImage(newImage, 'PNG', centerX - 25, newImageY, 50, 50); // Centered below the title\n\n      // Set font size for subtitle and description\n      doc.setFontSize(12);\n      const subtitle = 'Counselling | Admissions | KG to PG | Aptitude Tests Mock Exams | Jobs | Skills | India | Abroad';\n      const subtitleY = 150; // Adjust y-coordinate for subtitle\n      doc.text(subtitle, 40, subtitleY);\n\n      // Set red color for specific words\n      const redWords = ['Education', 'Mock Exams', 'Abroad'];\n      const redColor = [255, 0, 0]; // RGB for red\n\n      // Draw the subtitle with specific words in red\n      const words = subtitle.split('|');\n      let currentY = subtitleY;\n      words.forEach((word, index) => {\n        // Trim spaces and set text color\n        const trimmedWord = word.trim();\n        if (redWords.includes(trimmedWord)) {\n          doc.setTextColor(...redColor); // Set to red\n        } else {\n          doc.setTextColor(0, 0, 0); // Set to black\n        }\n\n        // Add each word to the document\n        doc.text(trimmedWord, 40, currentY);\n        currentY += 10; // Adjust spacing between lines\n      });\n\n      // Add contact information below the subtitle\n      doc.setTextColor(0, 0, 0); // Reset to black\n      doc.text('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', 40, currentY + 10);\n    };\n\n    // Add header to the first page\n    addHeader();\n\n    // Add student information (Assuming the details are hardcoded or can be passed as props)\n    const lineHeight = 20; // Adjust this value for desired spacing\n\n    doc.setFontSize(14);\n    doc.text(`Student Name: Rakhi`, 40, 140);\n    doc.text(`Course Preferences: Bachelor of Pharmacy`, 40, 140 + lineHeight);\n    doc.text(`University Preference: Pune & Mumbai University`, 40, 140 + lineHeight * 2);\n    doc.text(`MHT-CET Score: 79.22`, 40, 140 + lineHeight * 3);\n    doc.text(`Pune & Mumbai College Preferences List`, 40, 140 + lineHeight * 4);\n\n    // Add table headers\n    const columns = [{\n      header: 'Sr.No',\n      dataKey: 'srNo'\n    }, {\n      header: 'College Code',\n      dataKey: 'collegeCode'\n    }, {\n      header: 'College Name',\n      dataKey: 'collegeName'\n    }, {\n      header: 'Address',\n      dataKey: 'address'\n    }, {\n      header: 'Status',\n      dataKey: 'status'\n    }, {\n      header: 'District',\n      dataKey: 'district'\n    }];\n\n    // Map the data to match the table structure\n    const rows = universities.map((college, index) => ({\n      srNo: index + 1,\n      collegeCode: college['college code'],\n      // Replace with actual field name\n      collegeName: college['College Name'],\n      address: college['Address'],\n      // Replace with actual field name\n      status: college['Institute Status'],\n      // Replace with actual field name\n      district: college['District'] // Replace with actual field name\n    }));\n\n    // Add table with university data\n    doc.autoTable({\n      startY: 240,\n      // Start position for the table\n      head: [columns.map(col => col.header)],\n      body: rows.map(row => columns.map(col => row[col.dataKey])),\n      margin: {\n        top: 10\n      },\n      didDrawPage: data => {\n        // Re-add header on every page\n        addHeader();\n      }\n    });\n\n    // Add footer\n    doc.text('Note: The above list is not an allotment or admission list. It is just only predictions based on score, category, previous year trending cut-offs, Institute or College status, all ranks and many other parameters.', 40, doc.lastAutoTable.finalY + 40);\n\n    // Create Blob URL for PDF preview\n    const pdfBlob = doc.output('blob');\n    const pdfUrl = URL.createObjectURL(pdfBlob);\n    setPdfPreviewUrl(pdfUrl);\n  };\n  const handleDownloadPDF = () => {\n    const doc = new jsPDF('p', 'pt', 'a4');\n    // Add your PDF generation code here as above (you can reuse the handleGeneratePDF code)\n    doc.save('Filtered_Colleges_List.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      className: \"sm:mt-0 mt-14\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-8 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(SectionTitle, {\n          title: \"Most Popular Colleges\",\n          classes: \"text-center text-2xl font-bold sm:text-3xl\" // Corrected font size\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-end sm:justify-center sm:pr-0 pr-4 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-[15px] font-bold py-2 px-4 bg-green-500 text-white rounded\",\n            onClick: handleGeneratePDF,\n            children: \"Preview PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: universities.length > 0 ? /*#__PURE__*/_jsxDEV(FundCards, {\n            universities: universities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-600\",\n            children: \"No colleges found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), pdfPreviewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg relative max-w-3xl w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-2 right-2 text-gray-500 hover:text-gray-800\",\n          onClick: () => setPdfPreviewUrl(null),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"PDF Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: pdfPreviewUrl,\n          width: \"100%\",\n          height: \"500px\",\n          title: \"PDF Preview\",\n          className: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-[15px] font-bold py-2 px-4 bg-blue-500 text-white rounded\",\n            onClick: handleDownloadPDF,\n            children: \"Download PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(FundsTabs, \"TCRCCuWgnMt8CWwBtqrGe7F/gNM=\");\n_c = FundsTabs;\nvar _c;\n$RefreshReg$(_c, \"FundsTabs\");","map":{"version":3,"names":["React","useState","Tab","Tabs","TabPanel","FundCards","SectionTitle","jsPDF","jsxDEV","_jsxDEV","FundsTabs","universities","_s","pdfPreviewUrl","setPdfPreviewUrl","logoLeft","process","env","PUBLIC_URL","logoRight","newImage","handleGeneratePDF","doc","pageWidth","internal","pageSize","getWidth","addHeader","addImage","setFontSize","title","titleWidth","getTextWidth","size","centerX","text","newImageY","subtitle","subtitleY","redWords","redColor","words","split","currentY","forEach","word","index","trimmedWord","trim","includes","setTextColor","lineHeight","columns","header","dataKey","rows","map","college","srNo","collegeCode","collegeName","address","status","district","autoTable","startY","head","col","body","row","margin","top","didDrawPage","data","lastAutoTable","finalY","pdfBlob","output","pdfUrl","URL","createObjectURL","handleDownloadPDF","save","children","className","classes","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","src","width","height","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/FundsTabs2.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tab, Tabs, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport FundCards from \"./UniversityCard\";\r\nimport SectionTitle from \"./SectionTitle\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nexport default function FundsTabs({ universities }) {\r\n  const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\r\n\r\n  // Base64 or URL of your images\r\n  const logoLeft = `${process.env.PUBLIC_URL}/logo192.png`; // Replace with your base64 string for the left logo\r\n  const logoRight = `${process.env.PUBLIC_URL}/logo192.png`;\r\n  const newImage = `${process.env.PUBLIC_URL}/logo192.png`; // Replace with your base64 string for the right logo\r\n\r\n  const handleGeneratePDF = () => {\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    const pageWidth = doc.internal.pageSize.getWidth();\r\n\r\n    // Function to add header with logos on each page\r\n    const addHeader = () => {\r\n      // Add left logo\r\n      doc.addImage(logoLeft, 'PNG', 40, 10, 50, 50); // Adjust position and size as needed\r\n      // Add right logo\r\n      doc.addImage(logoRight, 'PNG', pageWidth - 90, 10, 50, 50); // Adjust position and size as needed\r\n      \r\n      // Set font size for title\r\n      doc.setFontSize(16);\r\n      const title = 'Indiaâ€™s Leading Educational Web Portal & App';\r\n      const titleWidth = doc.getTextWidth(title, { size: 16 });\r\n      const centerX = doc.internal.pageSize.getWidth() / 2; \r\n      doc.text(title, centerX - titleWidth / 2, 70);\r\n      \r\n      // Add the new image below the title\r\n      const newImageY = 85; // Adjust y-coordinate as needed\r\n      doc.addImage(newImage, 'PNG', centerX - 25, newImageY, 50, 50); // Centered below the title\r\n    \r\n      // Set font size for subtitle and description\r\n      doc.setFontSize(12);\r\n      const subtitle = 'Counselling | Admissions | KG to PG | Aptitude Tests Mock Exams | Jobs | Skills | India | Abroad';\r\n      const subtitleY = 150; // Adjust y-coordinate for subtitle\r\n      doc.text(subtitle, 40, subtitleY);\r\n      \r\n      // Set red color for specific words\r\n      const redWords = ['Education', 'Mock Exams', 'Abroad'];\r\n      const redColor = [255, 0, 0]; // RGB for red\r\n      \r\n      // Draw the subtitle with specific words in red\r\n      const words = subtitle.split('|');\r\n      let currentY = subtitleY;\r\n      \r\n      words.forEach((word, index) => {\r\n        // Trim spaces and set text color\r\n        const trimmedWord = word.trim();\r\n        if (redWords.includes(trimmedWord)) {\r\n          doc.setTextColor(...redColor); // Set to red\r\n        } else {\r\n          doc.setTextColor(0, 0, 0); // Set to black\r\n        }\r\n    \r\n        // Add each word to the document\r\n        doc.text(trimmedWord, 40, currentY);\r\n        currentY += 10; // Adjust spacing between lines\r\n      });\r\n      \r\n      // Add contact information below the subtitle\r\n      doc.setTextColor(0, 0, 0); // Reset to black\r\n      doc.text('Web: www.vidyarthimitra.org | Ph. +91 77200 25900;', 40, currentY + 10);\r\n    };\r\n    \r\n\r\n    // Add header to the first page\r\n    addHeader();\r\n\r\n    // Add student information (Assuming the details are hardcoded or can be passed as props)\r\n    const lineHeight = 20; // Adjust this value for desired spacing\r\n\r\n    doc.setFontSize(14);\r\n    doc.text(`Student Name: Rakhi`, 40, 140);\r\n    doc.text(`Course Preferences: Bachelor of Pharmacy`, 40, 140 + lineHeight);\r\n    doc.text(`University Preference: Pune & Mumbai University`, 40, 140 + lineHeight * 2);\r\n    doc.text(`MHT-CET Score: 79.22`, 40, 140 + lineHeight * 3);\r\n    doc.text(`Pune & Mumbai College Preferences List`, 40, 140 + lineHeight * 4);\r\n    \r\n\r\n    // Add table headers\r\n    const columns = [\r\n      { header: 'Sr.No', dataKey: 'srNo' },\r\n      { header: 'College Code', dataKey: 'collegeCode' },\r\n      { header: 'College Name', dataKey: 'collegeName' },\r\n      { header: 'Address', dataKey: 'address' },\r\n      { header: 'Status', dataKey: 'status' },\r\n      { header: 'District', dataKey: 'district' }\r\n    ];\r\n\r\n    // Map the data to match the table structure\r\n    const rows = universities.map((college, index) => ({\r\n      srNo: index + 1,\r\n      collegeCode: college['college code'], // Replace with actual field name\r\n      collegeName: college['College Name'],\r\n      address: college['Address'], // Replace with actual field name\r\n      status: college['Institute Status'], // Replace with actual field name\r\n      district: college['District'] // Replace with actual field name\r\n    }));\r\n\r\n    // Add table with university data\r\n    doc.autoTable({\r\n      startY: 240, // Start position for the table\r\n      head: [columns.map(col => col.header)],\r\n      body: rows.map(row => columns.map(col => row[col.dataKey])),\r\n      margin: { top: 10 },\r\n      didDrawPage: (data) => {\r\n        // Re-add header on every page\r\n        addHeader();\r\n      }\r\n    });\r\n\r\n    // Add footer\r\n    doc.text('Note: The above list is not an allotment or admission list. It is just only predictions based on score, category, previous year trending cut-offs, Institute or College status, all ranks and many other parameters.', 40, doc.lastAutoTable.finalY + 40);\r\n\r\n    // Create Blob URL for PDF preview\r\n    const pdfBlob = doc.output('blob');\r\n    const pdfUrl = URL.createObjectURL(pdfBlob);\r\n    setPdfPreviewUrl(pdfUrl);\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const doc = new jsPDF('p', 'pt', 'a4');\r\n    // Add your PDF generation code here as above (you can reuse the handleGeneratePDF code)\r\n    doc.save('Filtered_Colleges_List.pdf');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Tabs className=\"sm:mt-0 mt-14\">\r\n      <div className=\"my-8 flex flex-col items-center\">\r\n        <SectionTitle\r\n          title=\"Most Popular Colleges\"\r\n          classes=\"text-center text-2xl font-bold sm:text-3xl\" // Corrected font size\r\n        />\r\n        <div className=\"w-full flex justify-end sm:justify-center sm:pr-0 pr-4 mt-4\">\r\n          <button\r\n            className=\"text-[15px] font-bold py-2 px-4 bg-green-500 text-white rounded\"\r\n            onClick={handleGeneratePDF}\r\n          >\r\n            Preview PDF\r\n          </button>\r\n        </div>\r\n        </div>\r\n        <TabPanel>\r\n          <div className=\"flex justify-center\">\r\n            {universities.length > 0 ? (\r\n              <FundCards universities={universities} />\r\n            ) : (\r\n              <p className=\"text-center text-gray-600\">No colleges found</p>\r\n            )}\r\n          </div>\r\n        </TabPanel>\r\n      </Tabs>\r\n\r\n      {/* PDF Preview Modal */}\r\n      {pdfPreviewUrl && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <div className=\"bg-white p-6 rounded-lg relative max-w-3xl w-full\">\r\n            <button\r\n              className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-800\"\r\n              onClick={() => setPdfPreviewUrl(null)}\r\n            >\r\n              âœ–\r\n            </button>\r\n            <h2 className=\"text-xl font-bold mb-4\">PDF Preview</h2>\r\n            <iframe\r\n              src={pdfPreviewUrl}\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n              title=\"PDF Preview\"\r\n              className=\"border\"\r\n            />\r\n            <div className=\"text-right mt-4\">\r\n              <button\r\n                className=\"text-[15px] font-bold py-2 px-4 bg-blue-500 text-white rounded\"\r\n                onClick={handleDownloadPDF}\r\n              >\r\n                Download PDF\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}