{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\MyRoutes.js\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Admportal from \"./Pages/Admportal\";\nimport Collpred from \"./Pages/Collpred\";\nimport LoginModal from \"./components/LoginModal\";\nimport Neetpred from \"./Pages/Neetpred\";\nimport AdminDashboard from \"./Admindashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Implement your logic to check if the user is authenticated\n  const user = JSON.parse(localStorage.getItem('user'));\n  return user !== null; // or any other logic based on your application\n};\nexport default function MyRoutes() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admportal\",\n      element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Admportal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 61\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 77\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/collpred\",\n      element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(Collpred, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 60\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/neetpred\",\n      element: /*#__PURE__*/_jsxDEV(Neetpred, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin\",\n      element: isAuthenticated() ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = MyRoutes;\nvar _c;\n$RefreshReg$(_c, \"MyRoutes\");","map":{"version":3,"names":["Route","Routes","Navigate","Home","Admportal","Collpred","LoginModal","Neetpred","AdminDashboard","jsxDEV","_jsxDEV","isAuthenticated","user","JSON","parse","localStorage","getItem","MyRoutes","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/MyRoutes.js"],"sourcesContent":["import { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home\";\r\nimport Admportal from \"./Pages/Admportal\";\r\nimport Collpred from \"./Pages/Collpred\";\r\nimport LoginModal from \"./components/LoginModal\";\r\nimport Neetpred from \"./Pages/Neetpred\";\r\nimport AdminDashboard from \"./Admindashboard\";\r\n\r\nconst isAuthenticated = () => {\r\n  // Implement your logic to check if the user is authenticated\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  return user !== null; // or any other logic based on your application\r\n};\r\n\r\nexport default function MyRoutes() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Navigate to=\"/home\" />} />\r\n      <Route path=\"/home\" element={<Home />} />\r\n      <Route path=\"/admportal\" element={isAuthenticated() ? <Admportal /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/collpred\" element={isAuthenticated() ? <Collpred /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"/login\" element={<LoginModal />} />\r\n      <Route path=\"/neetpred\" element={<Neetpred />} />\r\n      <Route path=\"/admin\" element={isAuthenticated() ? <AdminDashboard /> : <Navigate to=\"/login\" />} />\r\n      <Route path=\"*\" element={<Navigate to=\"/home\" />} /> {/* Redirects to Home for unmatched routes */}\r\n    </Routes>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}