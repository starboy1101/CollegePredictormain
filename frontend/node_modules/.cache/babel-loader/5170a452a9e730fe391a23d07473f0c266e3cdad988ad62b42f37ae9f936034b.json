{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\Neetcard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Slider from './Slider';\nimport { Card, CardContainer, CardText, CardTitle, CardSubtitle, CardButton } from './UniversityCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UniversityCard = ({\n  institute,\n  course,\n  category,\n  minRank,\n  maxRank,\n  onApply\n}) => {\n  _s();\n  const [showFullName, setShowFullName] = useState(false);\n  const [firstPart, rest] = name.split(',', 2);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardText, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [firstPart, showFullName && `,${rest}`, !showFullName && rest && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullName(true),\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          children: \".Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Course: \", course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Category: \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Clossing Rank: \", maxRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(UniversityCard, \"fQBuZPDnX9Qoa2XVQVwlnuQ7KLU=\");\n_c = UniversityCard;\nconst UniversityCardList = ({\n  universities = []\n}) => {\n  _s2();\n  const [NeetfilteredUniversities, setNeetFilteredUniversities] = useState(universities);\n  const handleRangeChange = range => {\n    setNeetFilteredUniversities(universities.filter(college => {\n      const roundedmaxRank = Math.floor(college.maxRank);\n      return roundedmaxRank >= range[0] && roundedmaxRank <= range[1];\n    }));\n  };\n  useEffect(() => {\n    if (universities.length > 0) {\n      const maxRanks = universities.map(college => Math.floor(college.maxRank));\n      const maxmaxRank = Math.max(...maxRanks);\n      handleRangeChange([0, maxmaxRank]);\n    }\n  }, [universities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '600px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        universities: universities,\n        onRangeChange: handleRangeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      children: Array.isArray(NeetfilteredUniversities) && NeetfilteredUniversities.length > 0 ? NeetfilteredUniversities.map(college => /*#__PURE__*/_jsxDEV(UniversityCard, {\n        institute: college['Allotted Institute'],\n        maxRank: Math.floor(college['max_rank']),\n        onApply: () => {\n          const url = college['Website URL'];\n          const formattedURL = url.startsWith('http://') || url.startsWith('https://') ? url : `http://${url}`;\n          window.open(formattedURL, '_blank');\n        }\n      }, college['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No colleges found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s2(UniversityCardList, \"49OnHwBBFUW72iCsaEWhmq8YBI0=\");\n_c2 = UniversityCardList;\nexport default UniversityCardList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UniversityCard\");\n$RefreshReg$(_c2, \"UniversityCardList\");","map":{"version":3,"names":["React","useState","useEffect","Slider","Card","CardContainer","CardText","CardTitle","CardSubtitle","CardButton","jsxDEV","_jsxDEV","UniversityCard","institute","course","category","minRank","maxRank","onApply","_s","showFullName","setShowFullName","firstPart","rest","name","split","children","onClick","style","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","UniversityCardList","universities","_s2","NeetfilteredUniversities","setNeetFilteredUniversities","handleRangeChange","range","filter","college","roundedmaxRank","Math","floor","length","maxRanks","map","maxmaxRank","max","display","flexDirection","alignItems","width","maxWidth","marginBottom","onRangeChange","Array","isArray","url","formattedURL","startsWith","window","open","_c2","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Neetcard.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport Slider from './Slider'; \r\nimport {\r\n  Card,\r\n  CardContainer,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardButton\r\n} from './UniversityCard.styles';\r\n\r\nconst UniversityCard = ({ institute, course, category, minRank, maxRank, onApply}) => {\r\n  const [showFullName, setShowFullName] = useState(false);\r\n  const [firstPart, rest] = name.split(',', 2);\r\n\r\n  return (\r\n    <Card>\r\n      <CardText>\r\n        <CardTitle>\r\n          {firstPart}\r\n          {showFullName && `,${rest}`}\r\n          {!showFullName && rest && (\r\n            <button\r\n              onClick={() => setShowFullName(true)}\r\n              style={{ color: 'blue', cursor: 'pointer' }}\r\n            >\r\n              .Read More\r\n            </button>\r\n          )}\r\n        </CardTitle>\r\n        <CardSubtitle>Course: {course}</CardSubtitle>\r\n        <CardSubtitle>Category: {category}</CardSubtitle>\r\n        <CardSubtitle>Clossing Rank: {maxRank}</CardSubtitle>\r\n        {/* <CardButton onClick={onApply}>Apply Now</CardButton> */}\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst UniversityCardList = ({ universities = [] }) => {\r\n  const [NeetfilteredUniversities, setNeetFilteredUniversities] = useState(universities);\r\n\r\n  const handleRangeChange = (range) => {\r\n    setNeetFilteredUniversities(\r\n      universities.filter((college) => {\r\n        const roundedmaxRank = Math.floor(college.maxRank);\r\n        return (\r\n          roundedmaxRank >= range[0] &&\r\n          roundedmaxRank <= range[1]\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const maxRanks = universities.map((college) => Math.floor(college.maxRank));\r\n      const maxmaxRank = Math.max(...maxRanks);\r\n      handleRangeChange([0, maxmaxRank]); \r\n    }\r\n  }, [universities]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {/* Slider Section */}\r\n      <div style={{ width: '100%', maxWidth: '600px', marginBottom: '20px' }}>\r\n        <Slider universities={universities} onRangeChange={handleRangeChange} />\r\n      </div>\r\n      \r\n      <CardContainer>\r\n        {Array.isArray(NeetfilteredUniversities) && NeetfilteredUniversities.length > 0 ? (\r\n          NeetfilteredUniversities.map((college) => (\r\n            <UniversityCard\r\n              key={college['_id']}\r\n              institute={college['Allotted Institute']}\r\n              maxRank={Math.floor(college['max_rank'])}\r\n              onApply={() => {\r\n                const url = college['Website URL'];\r\n                const formattedURL =\r\n                  url.startsWith('http://') || url.startsWith('https://')\r\n                    ? url\r\n                    : `http://${url}`;\r\n                window.open(formattedURL, '_blank');\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No colleges found</p>\r\n        )}\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniversityCardList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}