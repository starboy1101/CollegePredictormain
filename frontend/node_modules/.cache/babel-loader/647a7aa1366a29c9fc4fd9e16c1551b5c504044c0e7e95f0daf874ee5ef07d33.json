{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const fetchUserData = async () => {\n        setIsLoading(true);\n        try {\n          const response = await fetch(`${process.env.REACT_APP_API_URL}/api/user`, {\n            method: 'GET',\n            headers: {\n              'Authorization': token,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (!response.ok) {\n            throw new Error('Failed to fetch user data');\n          }\n          const userData = await response.json();\n          setUser(userData); // Update the user state with the fetched data\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          setUser(null); // Reset user state on error\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchUserData();\n    } else {\n      setIsLoading(false); // If no token, just set loading to false\n    }\n  }, []);\n  const login = (userData, token) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","fetchUserData","response","fetch","process","env","REACT_APP_API_URL","method","headers","ok","Error","userData","json","error","console","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true); \r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const fetchUserData = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n          const response = await fetch(`${process.env.REACT_APP_API_URL}/api/user`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': token,\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch user data');\r\n          }\r\n\r\n          const userData = await response.json();\r\n          setUser(userData); // Update the user state with the fetched data\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n          setUser(null); // Reset user state on error\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchUserData();\r\n    } else {\r\n      setIsLoading(false); // If no token, just set loading to false\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData, token) => {\r\n    localStorage.setItem('token', token);\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChCJ,YAAY,CAAC,IAAI,CAAC;QAClB,IAAI;UACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,WAAW,EAAE;YACxEC,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cACP,eAAe,EAAEV,KAAK;cACtB,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;UAC9C;UAEA,MAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACtCjB,OAAO,CAACgB,QAAQ,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACjDlB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,CAAC,SAAS;UACRE,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC;MAEDI,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLJ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,KAAK,GAAGA,CAACJ,QAAQ,EAAEb,KAAK,KAAK;IACjCC,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAElB,KAAK,CAAC;IACpCH,OAAO,CAACgB,QAAQ,CAAC;EACnB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBlB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;IAChCvB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEqB,KAAK;MAAEE;IAAO,CAAE;IAAAzB,QAAA,EAClDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CArDWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAuDzB,OAAO,MAAMmC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACK,WAAW,CAAC;AAAA;AAACqC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}