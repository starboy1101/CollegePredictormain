{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\Admindashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [mhtCetFile, setMhtCetFile] = useState(null);\n  const [neetFile, setNeetFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const handleMhtCetFileChange = e => {\n    setMhtCetFile(e.target.files[0]);\n  };\n  const handleNeetFileChange = e => {\n    setNeetFile(e.target.files[0]);\n  };\n  const uploadFile = async (file, type) => {\n    const formData = new FormData();\n    formData.append('csvFile', file); // 'csvFile' should match the multer field name\n\n    setUploading(true);\n    try {\n      const response = await axios.post(`http://localhost:4000/upload-${type}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        alert(`${type.toUpperCase()} dataset updated successfully!`);\n      } else {\n        alert(`Failed to upload ${type} dataset.`);\n      }\n    } catch (error) {\n      console.error(`Error uploading ${type} file:`, error);\n      alert(`Error uploading ${type} dataset.`);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleMhtCetUpload = () => {\n    if (mhtCetFile) {\n      uploadFile(mhtCetFile, 'mhtcet');\n    } else {\n      alert('Please select a file to upload for MHT-CET.');\n    }\n  };\n  const handleNeetUpload = () => {\n    if (neetFile) {\n      uploadFile(neetFile, 'neet');\n    } else {\n      alert('Please select a file to upload for NEET.');\n    }\n  };\n\n  // Function to handle downloading of data\n  const downloadData = async type => {\n    try {\n      const response = await axios.get(`http://localhost:4000/download-${type}`, {\n        responseType: 'blob' // Important to handle file downloads\n      });\n\n      // Create a URL for the blob and create a link element to trigger the download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `${type}_dataset.csv`); // Name of the downloaded file\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      console.error(`Error downloading ${type} data:`, error);\n      alert(`Error downloading ${type} dataset.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update MHT-CET Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleMhtCetFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMhtCetUpload,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Upload MHT-CET CSV'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update NEET Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleNeetFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNeetUpload,\n        disabled: uploading,\n        children: uploading ? 'Uploading...' : 'Upload NEET CSV'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Download Current Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadData('mhtcet'),\n        children: \"Download MHT-CET Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadData('neet'),\n        children: \"Download NEET Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"1h6sgJkuevcz4q9hWU2tqhXBdPo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","mhtCetFile","setMhtCetFile","neetFile","setNeetFile","uploading","setUploading","handleMhtCetFileChange","e","target","files","handleNeetFileChange","uploadFile","file","type","formData","FormData","append","response","post","headers","status","alert","toUpperCase","error","console","handleMhtCetUpload","handleNeetUpload","downloadData","get","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/Admindashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const [mhtCetFile, setMhtCetFile] = useState(null);\r\n  const [neetFile, setNeetFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleMhtCetFileChange = (e) => {\r\n    setMhtCetFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleNeetFileChange = (e) => {\r\n    setNeetFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFile = async (file, type) => {\r\n    const formData = new FormData();\r\n    formData.append('csvFile', file); // 'csvFile' should match the multer field name\r\n\r\n    setUploading(true);\r\n    try {\r\n      const response = await axios.post(`http://localhost:4000/upload-${type}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert(`${type.toUpperCase()} dataset updated successfully!`);\r\n      } else {\r\n        alert(`Failed to upload ${type} dataset.`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error uploading ${type} file:`, error);\r\n      alert(`Error uploading ${type} dataset.`);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleMhtCetUpload = () => {\r\n    if (mhtCetFile) {\r\n      uploadFile(mhtCetFile, 'mhtcet');\r\n    } else {\r\n      alert('Please select a file to upload for MHT-CET.');\r\n    }\r\n  };\r\n\r\n  const handleNeetUpload = () => {\r\n    if (neetFile) {\r\n      uploadFile(neetFile, 'neet');\r\n    } else {\r\n      alert('Please select a file to upload for NEET.');\r\n    }\r\n  };\r\n\r\n  // Function to handle downloading of data\r\n  const downloadData = async (type) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:4000/download-${type}`, {\r\n        responseType: 'blob', // Important to handle file downloads\r\n      });\r\n\r\n      // Create a URL for the blob and create a link element to trigger the download\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `${type}_dataset.csv`); // Name of the downloaded file\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error(`Error downloading ${type} data:`, error);\r\n      alert(`Error downloading ${type} dataset.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <h3>Update MHT-CET Dataset</h3>\r\n        <input type=\"file\" onChange={handleMhtCetFileChange} />\r\n        <button onClick={handleMhtCetUpload} disabled={uploading}>\r\n          {uploading ? 'Uploading...' : 'Upload MHT-CET CSV'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"upload-section\">\r\n        <h3>Update NEET Dataset</h3>\r\n        <input type=\"file\" onChange={handleNeetFileChange} />\r\n        <button onClick={handleNeetUpload} disabled={uploading}>\r\n          {uploading ? 'Uploading...' : 'Upload NEET CSV'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"download-section\">\r\n        <h3>Download Current Data</h3>\r\n        <button onClick={() => downloadData('mhtcet')}>\r\n          Download MHT-CET Dataset\r\n        </button>\r\n        <button onClick={() => downloadData('neet')}>\r\n          Download NEET Dataset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,sBAAsB,GAAIC,CAAC,IAAK;IACpCN,aAAa,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClCJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,KAAK;IACvC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEJ,IAAI,CAAC,CAAC,CAAC;;IAElCP,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,gCAAgCL,IAAI,EAAE,EAAEC,QAAQ,EAAE;QAClFK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,GAAGR,IAAI,CAACS,WAAW,CAAC,CAAC,gCAAgC,CAAC;MAC9D,CAAC,MAAM;QACLD,KAAK,CAAC,oBAAoBR,IAAI,WAAW,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmBV,IAAI,QAAQ,EAAEU,KAAK,CAAC;MACrDF,KAAK,CAAC,mBAAmBR,IAAI,WAAW,CAAC;IAC3C,CAAC,SAAS;MACRR,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIzB,UAAU,EAAE;MACdW,UAAU,CAACX,UAAU,EAAE,QAAQ,CAAC;IAClC,CAAC,MAAM;MACLqB,KAAK,CAAC,6CAA6C,CAAC;IACtD;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIxB,QAAQ,EAAE;MACZS,UAAU,CAACT,QAAQ,EAAE,MAAM,CAAC;IAC9B,CAAC,MAAM;MACLmB,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOd,IAAI,IAAK;IACnC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMtB,KAAK,CAACiC,GAAG,CAAC,kCAAkCf,IAAI,EAAE,EAAE;QACzEgB,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACjB,QAAQ,CAACkB,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,GAAG3B,IAAI,cAAc,CAAC,CAAC,CAAC;MACtDwB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZP,IAAI,CAACQ,MAAM,CAAC,CAAC;IACf,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqBV,IAAI,QAAQ,EAAEU,KAAK,CAAC;MACvDF,KAAK,CAAC,qBAAqBR,IAAI,WAAW,CAAC;IAC7C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKgD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BjD,OAAA;MAAAiD,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBrD,OAAA;MAAKgD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjD,OAAA;QAAAiD,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BrD,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACsC,QAAQ,EAAE7C;MAAuB;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDrD,OAAA;QAAQuD,OAAO,EAAE3B,kBAAmB;QAAC4B,QAAQ,EAAEjD,SAAU;QAAA0C,QAAA,EACtD1C,SAAS,GAAG,cAAc,GAAG;MAAoB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrD,OAAA;MAAKgD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjD,OAAA;QAAAiD,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrD,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACsC,QAAQ,EAAEzC;MAAqB;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDrD,OAAA;QAAQuD,OAAO,EAAE1B,gBAAiB;QAAC2B,QAAQ,EAAEjD,SAAU;QAAA0C,QAAA,EACpD1C,SAAS,GAAG,cAAc,GAAG;MAAiB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrD,OAAA;MAAKgD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BjD,OAAA;QAAAiD,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrD,OAAA;QAAQuD,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAAC,QAAQ,CAAE;QAAAmB,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrD,OAAA;QAAQuD,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAAC,MAAM,CAAE;QAAAmB,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnD,EAAA,CA1GID,cAAc;AAAAwD,EAAA,GAAdxD,cAAc;AA4GpB,eAAeA,cAAc;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}