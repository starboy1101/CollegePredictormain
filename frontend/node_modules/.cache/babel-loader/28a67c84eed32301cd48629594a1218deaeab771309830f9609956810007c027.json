{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport SidePanel from './components/SidePanel';\nimport Home from './Pages/Home';\nimport Admportal from './Pages/admportal';\nimport Collpred from './Pages/Collpred';\nimport Neetpred from './Pages/Neetpred';\nimport AdminDashboard from './Admindashboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // Control SidePanel visibility\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Check login status\n  const [user, setUser] = useState(null); // Store user details after login\n\n  // Check if the user is already logged in when the app loads (e.g., from localStorage)\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  // Handle user login\n  const handleLogin = userData => {\n    setUser(userData);\n    setIsLoggedIn(true);\n    setIsOpen(false); // Close the side panel on successful login\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n  };\n\n  // Handle user logout\n  const handleLogout = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n    localStorage.removeItem('user'); // Clear user from local storage\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      onLoginClick: () => setIsOpen(true),\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admportal\",\n        element: /*#__PURE__*/_jsxDEV(Admportal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/collpred\",\n        element: /*#__PURE__*/_jsxDEV(Collpred, {\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/neetpred\",\n        element: /*#__PURE__*/_jsxDEV(Neetpred, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SidePanel, {\n      isOpen: isOpen,\n      onClose: () => setIsOpen(false),\n      isLoggedIn: isLoggedIn,\n      onLogin: handleLogin,\n      onLogout: handleLogout,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"nlgL6mQQFr2VyeQYjts4C23EdVQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","Navbar","SidePanel","Home","Admportal","Collpred","Neetpred","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isOpen","setIsOpen","isLoggedIn","setIsLoggedIn","user","setUser","storedUser","localStorage","getItem","JSON","parse","handleLogin","userData","setItem","stringify","handleLogout","removeItem","children","onLoginClick","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onClose","onLogin","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport SidePanel from './components/SidePanel';\r\nimport Home from './Pages/Home';\r\nimport Admportal from './Pages/admportal';\r\nimport Collpred from './Pages/Collpred';\r\nimport Neetpred from './Pages/Neetpred';\r\nimport AdminDashboard from './Admindashboard';\r\n\r\nfunction App() {\r\n  const [isOpen, setIsOpen] = useState(false); // Control SidePanel visibility\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Check login status\r\n  const [user, setUser] = useState(null); // Store user details after login\r\n\r\n  // Check if the user is already logged in when the app loads (e.g., from localStorage)\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  // Handle user login\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n    setIsLoggedIn(true);\r\n    setIsOpen(false); // Close the side panel on successful login\r\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\r\n  };\r\n\r\n  // Handle user logout\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('user'); // Clear user from local storage\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Navbar receives user details and login state */}\r\n      <Navbar \r\n        isLoggedIn={isLoggedIn} \r\n        onLoginClick={() => setIsOpen(true)} \r\n        user={user}\r\n      />\r\n\r\n      {/* Define routes with access to the user's login state */}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to=\"/Home\" />} />\r\n        <Route path=\"/Home\" element={<Home />} />\r\n        <Route path=\"/admportal\" element={<Admportal />} />\r\n        <Route path=\"/collpred\" element={<Collpred isLoggedIn={isLoggedIn} />} />\r\n        <Route path=\"/neetpred\" element={<Neetpred />} />\r\n        <Route path=\"/admin\" element={<AdminDashboard />} />\r\n      </Routes>\r\n\r\n      {/* Side panel handles login and logout */}\r\n      <SidePanel\r\n        isOpen={isOpen}\r\n        onClose={() => setIsOpen(false)}\r\n        isLoggedIn={isLoggedIn}\r\n        onLogin={handleLogin}\r\n        onLogout={handleLogout}\r\n        user={user}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MAC/BH,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,WAAW,GAAIC,QAAQ,IAAK;IAChCP,OAAO,CAACO,QAAQ,CAAC;IACjBT,aAAa,CAAC,IAAI,CAAC;IACnBF,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAClBM,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBV,OAAO,CAAC,IAAI,CAAC;IACbF,aAAa,CAAC,KAAK,CAAC;IACpBI,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBAEEtB,OAAA,CAACR,MAAM;MACLe,UAAU,EAAEA,UAAW;MACvBgB,YAAY,EAAEA,CAAA,KAAMjB,SAAS,CAAC,IAAI,CAAE;MACpCG,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eAGF3B,OAAA,CAACX,MAAM;MAAAiC,QAAA,gBACLtB,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE7B,OAAA,CAACT,QAAQ;UAACuC,EAAE,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpD3B,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,OAAO;QAACC,OAAO,eAAE7B,OAAA,CAACN,IAAI;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzC3B,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,YAAY;QAACC,OAAO,eAAE7B,OAAA,CAACL,SAAS;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnD3B,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAE7B,OAAA,CAACJ,QAAQ;UAACW,UAAU,EAAEA;QAAW;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzE3B,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,WAAW;QAACC,OAAO,eAAE7B,OAAA,CAACH,QAAQ;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD3B,OAAA,CAACV,KAAK;QAACsC,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAE7B,OAAA,CAACF,cAAc;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAGT3B,OAAA,CAACP,SAAS;MACRY,MAAM,EAAEA,MAAO;MACf0B,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC,KAAK,CAAE;MAChCC,UAAU,EAAEA,UAAW;MACvByB,OAAO,EAAEhB,WAAY;MACrBiB,QAAQ,EAAEb,YAAa;MACvBX,IAAI,EAAEA;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA,eACF,CAAC;AAEP;AAACvB,EAAA,CA3DQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA6DZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}