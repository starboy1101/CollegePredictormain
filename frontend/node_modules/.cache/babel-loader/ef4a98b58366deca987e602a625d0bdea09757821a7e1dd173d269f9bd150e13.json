{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginModal.css';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginTypeSelector = ({\n  type,\n  handleLoginTypeChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"login-type mb-4\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"student\",\n      checked: type === 'student',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \"Student\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"admin\",\n      checked: type === 'admin',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \"Admin\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n_c = LoginTypeSelector;\nconst LoginForm = ({\n  isRegistering,\n  email,\n  setEmail,\n  password,\n  setPassword,\n  name,\n  setName,\n  course,\n  setCourse,\n  percentile,\n  setPercentile,\n  handleFormSubmit,\n  isLoading,\n  errorMessage // Added to handle error messages\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  className: \"login-form\",\n  onSubmit: handleFormSubmit,\n  children: [isRegistering && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      className: \"mb-2 p-2 border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Course\",\n      value: course,\n      onChange: e => setCourse(e.target.value),\n      className: \"mb-2 p-2 border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"number\",\n      placeholder: \"Percentile\",\n      value: percentile,\n      onChange: e => setPercentile(e.target.value),\n      className: \"mb-2 p-2 border border-gray-300 rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    className: \"mb-2 p-2 border border-gray-300 rounded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    className: \"mb-2 p-2 border border-gray-300 rounded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    className: \"mt-2 p-2 bg-blue-500 text-white rounded\",\n    children: isRegistering ? 'Register' : 'Login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 19\n  }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 22\n  }, this), \" \"]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\n_c2 = LoginForm;\nconst LoginModal = ({\n  onLogin\n}) => {\n  _s();\n  const [type, setType] = useState('student');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [course, setCourse] = useState('');\n  const [percentile, setPercentile] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(''); // State for error messages\n\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useAuth();\n  const handleLoginTypeChange = e => setType(e.target.value);\n  const loginUser = async userData => {\n    try {\n      const response = await fetch('http://localhost:4000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        return {\n          success: false,\n          message: errorData.message\n        };\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error during login:', error);\n      return {\n        success: false,\n        message: 'An error occurred during login.'\n      };\n    }\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrorMessage(''); // Reset error message\n\n    if (isRegistering) {\n      if (!email.includes('@')) {\n        setErrorMessage('Please enter a valid email.');\n        setIsLoading(false);\n        return;\n      }\n      if (percentile < 0 || percentile > 100) {\n        setErrorMessage('Percentile must be between 0 and 100.');\n        setIsLoading(false);\n        return;\n      }\n    }\n    try {\n      if (isRegistering) {\n        const formData = {\n          name,\n          email,\n          password,\n          type,\n          course,\n          percentile: parseInt(percentile, 10)\n        };\n        const response = await fetch('http://localhost:4000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert('Registered successfully!');\n          setUser(data.user);\n          onLogin(data.user);\n          navigate('/');\n        } else {\n          setErrorMessage('Registration failed: ' + data.message); // Set error message\n        }\n      } else {\n        const logindata = await loginUser({\n          email,\n          password,\n          type\n        });\n        if (logindata.success) {\n          localStorage.setItem('token', logindata.token);\n          setUser(logindata.user);\n          onLogin(logindata.user);\n          if (logindata.user.type === 'admin') {\n            navigate('/admin', {\n              replace: true\n            });\n          } else {\n            navigate('/', {\n              replace: true\n            });\n          }\n        } else {\n          setErrorMessage('Login failed! Invalid credentials.'); // Set error message\n        }\n      }\n    } catch (error) {\n      console.error('Error during login or registration:', error);\n      setErrorMessage('An error occurred during the process. Please check your input and try again.'); // Set error message\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginTypeSelector, {\n      type: type,\n      handleLoginTypeChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      isRegistering: isRegistering,\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      name: name,\n      setName: setName,\n      course: course,\n      setCourse: setCourse,\n      percentile: percentile,\n      setPercentile: setPercentile,\n      handleFormSubmit: handleFormSubmit,\n      isLoading: isLoading,\n      errorMessage: errorMessage // Pass error message to LoginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: e => {\n        e.preventDefault();\n        setIsRegistering(!isRegistering);\n        setEmail('');\n        setPassword('');\n        setName('');\n        setCourse('');\n        setPercentile('');\n      },\n      className: \"cursor-pointer text-blue-600 underline\",\n      children: isRegistering ? 'Already have an account? Login' : 'New here? Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"K8tx/EQq3a77zgN+ZBc2RCtEZoI=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c3 = LoginModal;\nexport default LoginModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginTypeSelector\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"LoginModal\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginTypeSelector","type","handleLoginTypeChange","className","children","value","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginForm","isRegistering","email","setEmail","password","setPassword","name","setName","course","setCourse","percentile","setPercentile","handleFormSubmit","isLoading","errorMessage","onSubmit","required","placeholder","e","target","disabled","_c2","LoginModal","onLogin","_s","setType","setIsRegistering","setIsLoading","setErrorMessage","navigate","setUser","loginUser","userData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","success","message","error","console","preventDefault","includes","formData","parseInt","data","alert","user","logindata","localStorage","setItem","token","replace","href","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginModal.css';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst LoginTypeSelector = ({ type, handleLoginTypeChange }) => (\r\n  <div className=\"login-type mb-4\">\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"student\"\r\n        checked={type === 'student'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Student\r\n    </label>\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"admin\"\r\n        checked={type === 'admin'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Admin\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst LoginForm = ({\r\n  isRegistering,\r\n  email,\r\n  setEmail,\r\n  password,\r\n  setPassword,\r\n  name,\r\n  setName,\r\n  course,\r\n  setCourse,\r\n  percentile,\r\n  setPercentile,\r\n  handleFormSubmit,\r\n  isLoading,\r\n  errorMessage, // Added to handle error messages\r\n}) => (\r\n  <form className=\"login-form\" onSubmit={handleFormSubmit}>\r\n    {isRegistering && (\r\n      <>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"mb-2 p-2 border border-gray-300 rounded\"\r\n        />\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Course\"\r\n          value={course}\r\n          onChange={(e) => setCourse(e.target.value)}\r\n          className=\"mb-2 p-2 border border-gray-300 rounded\"\r\n        />\r\n        <input\r\n          required\r\n          type=\"number\"\r\n          placeholder=\"Percentile\"\r\n          value={percentile}\r\n          onChange={(e) => setPercentile(e.target.value)}\r\n          className=\"mb-2 p-2 border border-gray-300 rounded\"\r\n        />\r\n      </>\r\n    )}\r\n    <input\r\n      required\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n      className=\"mb-2 p-2 border border-gray-300 rounded\"\r\n    />\r\n    <input\r\n      required\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n      className=\"mb-2 p-2 border border-gray-300 rounded\"\r\n    />\r\n    <button type=\"submit\" disabled={isLoading} className=\"mt-2 p-2 bg-blue-500 text-white rounded\">\r\n      {isRegistering ? 'Register' : 'Login'}\r\n    </button>\r\n    {isLoading && <p>Loading...</p>}\r\n    {errorMessage && <p className=\"text-red-500\">{errorMessage}</p>} {/* Display error message */}\r\n  </form>\r\n);\r\n\r\nconst LoginModal = ({ onLogin }) => {\r\n  const [type, setType] = useState('student');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [course, setCourse] = useState('');\r\n  const [percentile, setPercentile] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(''); // State for error messages\r\n  \r\n  const navigate = useNavigate();\r\n  const { setUser } = useAuth();\r\n\r\n  const handleLoginTypeChange = (e) => setType(e.target.value);\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        return { success: false, message: errorData.message };\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      return { success: false, message: 'An error occurred during login.' };\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setErrorMessage(''); // Reset error message\r\n\r\n    if (isRegistering) {\r\n      if (!email.includes('@')) {\r\n        setErrorMessage('Please enter a valid email.');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n      if (percentile < 0 || percentile > 100) {\r\n        setErrorMessage('Percentile must be between 0 and 100.');\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    try {\r\n      if (isRegistering) {\r\n        const formData = { name, email, password, type, course, percentile: parseInt(percentile, 10) };\r\n        const response = await fetch('http://localhost:4000/api/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          alert('Registered successfully!');\r\n          setUser(data.user);\r\n          onLogin(data.user);\r\n          navigate('/');\r\n        } else {\r\n          setErrorMessage('Registration failed: ' + data.message); // Set error message\r\n        }\r\n      } else {\r\n        const logindata = await loginUser({ email, password, type });\r\n\r\n        if (logindata.success) {\r\n          localStorage.setItem('token', logindata.token);\r\n          setUser(logindata.user);\r\n          onLogin(logindata.user);\r\n\r\n          if (logindata.user.type === 'admin') {\r\n            navigate('/admin', { replace: true });\r\n          } else {\r\n            navigate('/', { replace: true });\r\n          }\r\n        } else {\r\n          setErrorMessage('Login failed! Invalid credentials.'); // Set error message\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login or registration:', error);\r\n      setErrorMessage('An error occurred during the process. Please check your input and try again.'); // Set error message\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal\">\r\n      <h2>{isRegistering ? 'Register' : 'Login'}</h2>\r\n      <LoginTypeSelector type={type} handleLoginTypeChange={handleLoginTypeChange} />\r\n      <LoginForm\r\n        isRegistering={isRegistering}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        name={name}\r\n        setName={setName}\r\n        course={course}\r\n        setCourse={setCourse}\r\n        percentile={percentile}\r\n        setPercentile={setPercentile}\r\n        handleFormSubmit={handleFormSubmit}\r\n        isLoading={isLoading}\r\n        errorMessage={errorMessage} // Pass error message to LoginForm\r\n      />\r\n      <a\r\n        href=\"/\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setIsRegistering(!isRegistering);\r\n          setEmail('');\r\n          setPassword('');\r\n          setName('');\r\n          setCourse('');\r\n          setPercentile('');\r\n        }}\r\n        className=\"cursor-pointer text-blue-600 underline\"\r\n      >\r\n        {isRegistering ? 'Already have an account? Login' : 'New here? Register'}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}