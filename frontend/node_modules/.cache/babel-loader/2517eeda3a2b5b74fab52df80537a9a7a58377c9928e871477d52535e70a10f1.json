{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport PropTypes from 'prop-types'; // Import PropTypes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    isLoading\n  } = useAuth(); // Ensure isLoading is part of the auth context\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this); // Show a loading state while checking authentication\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this); // Redirect to login page if not logged in\n  }\n  return children; // Render children if user is authenticated\n};\n\n// Adding prop types for validation\n_s(ProtectedRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","PropTypes","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","propTypes","node","isRequired","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport PropTypes from 'prop-types'; // Import PropTypes\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, isLoading } = useAuth(); // Ensure isLoading is part of the auth context\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>; // Show a loading state while checking authentication\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/\" replace />; // Redirect to login page if not logged in\r\n  }\r\n\r\n  return children; // Render children if user is authenticated\r\n};\r\n\r\n// Adding prop types for validation\r\nProtectedRoute.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,SAAS,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEvC,IAAIQ,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAE,QAAA,EAAG;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC5B;EAEA,IAAI,CAACL,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EACtC;EAEA,OAAOP,QAAQ,CAAC,CAAC;AACnB,CAAC;;AAED;AAAAC,EAAA,CAdMF,cAAc;EAAA,QACUJ,OAAO;AAAA;AAAAe,EAAA,GAD/BX,cAAc;AAepBA,cAAc,CAACY,SAAS,GAAG;EACzBX,QAAQ,EAAEJ,SAAS,CAACgB,IAAI,CAACC;AAC3B,CAAC;AAED,eAAed,cAAc;AAAC,IAAAW,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}