{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./sliderStyles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Slider=_ref=>{let{universities,onRangeChange}=_ref;const[maxxRank,setMaxxRank]=useState(100);const[sliderValue,setSliderValue]=useState(100);useEffect(()=>{if(universities.length>0){const maxRanks=universities.map(college=>Math.floor(college.max_rank));const maxxRank=Math.max(...maxRanks);setMaxxRank(maxxRank);setSliderValue(maxxRank);}},[universities]);const handleChange=event=>{const value=event.target.value;setSliderValue(value);onRangeChange([0,value]);};const getTooltipStyle=()=>{const percent=sliderValue/maxxRank*100;return{left:`${percent}%`,transform:`translateX(-${percent}%)`};};return/*#__PURE__*/_jsx(\"div\",{className:\"sliderBox\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slidecontainer\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:maxxRank,className:\"slider\",value:sliderValue,onChange:handleChange}),/*#__PURE__*/_jsxs(\"div\",{className:\"rangeValues\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"0\"}),/*#__PURE__*/_jsx(\"span\",{children:maxxRank})]}),/*#__PURE__*/_jsx(\"div\",{className:\"tooltip\",style:getTooltipStyle(),children:sliderValue})]})});};export default Slider;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Slider","_ref","universities","onRangeChange","maxxRank","setMaxxRank","sliderValue","setSliderValue","length","maxRanks","map","college","Math","floor","max_rank","max","handleChange","event","value","target","getTooltipStyle","percent","left","transform","className","children","type","min","onChange","style"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Slider1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './sliderStyles.css'; \r\n\r\nconst Slider = ({ universities, onRangeChange }) => {\r\n  const [maxxRank, setMaxxRank] = useState(100); \r\n  const [sliderValue, setSliderValue] = useState(100); \r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n        const maxRanks = universities.map((college) => Math.floor(college.max_rank));\r\n        const maxxRank = Math.max(...maxRanks); \r\n        setMaxxRank(maxxRank);\r\n        setSliderValue(maxxRank);\r\n    }\r\n  }, [universities]);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSliderValue(value);\r\n    onRangeChange([0, value]); \r\n  };\r\n\r\n  const getTooltipStyle = () => {\r\n    const percent = (sliderValue / maxxRank) * 100;\r\n    return {\r\n      left: `${percent}%`,\r\n      transform: `translateX(-${percent}%)`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"sliderBox\">\r\n      <div className=\"slidecontainer\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max={maxxRank} \r\n          className=\"slider\"\r\n          value={sliderValue}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"rangeValues\">\r\n          <span>0</span>\r\n          <span>{maxxRank}</span>\r\n        </div>\r\n        <div className=\"tooltip\" style={getTooltipStyle()}>\r\n          {sliderValue}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAqC,IAApC,CAAEC,YAAY,CAAEC,aAAc,CAAC,CAAAF,IAAA,CAC7C,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,GAAG,CAAC,CAC7C,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,GAAG,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd,GAAIO,YAAY,CAACM,MAAM,CAAG,CAAC,CAAE,CACzB,KAAM,CAAAC,QAAQ,CAAGP,YAAY,CAACQ,GAAG,CAAEC,OAAO,EAAKC,IAAI,CAACC,KAAK,CAACF,OAAO,CAACG,QAAQ,CAAC,CAAC,CAC5E,KAAM,CAAAV,QAAQ,CAAGQ,IAAI,CAACG,GAAG,CAAC,GAAGN,QAAQ,CAAC,CACtCJ,WAAW,CAACD,QAAQ,CAAC,CACrBG,cAAc,CAACH,QAAQ,CAAC,CAC5B,CACF,CAAC,CAAE,CAACF,YAAY,CAAC,CAAC,CAElB,KAAM,CAAAc,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAAC,KAAK,CAAGD,KAAK,CAACE,MAAM,CAACD,KAAK,CAChCX,cAAc,CAACW,KAAK,CAAC,CACrBf,aAAa,CAAC,CAAC,CAAC,CAAEe,KAAK,CAAC,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAE,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAIf,WAAW,CAAGF,QAAQ,CAAI,GAAG,CAC9C,MAAO,CACLkB,IAAI,CAAE,GAAGD,OAAO,GAAG,CACnBE,SAAS,CAAE,eAAeF,OAAO,IACnC,CAAC,CACH,CAAC,CAED,mBACExB,IAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxB1B,KAAA,QAAKyB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5B,IAAA,UACE6B,IAAI,CAAC,OAAO,CACZC,GAAG,CAAC,GAAG,CACPZ,GAAG,CAAEX,QAAS,CACdoB,SAAS,CAAC,QAAQ,CAClBN,KAAK,CAAEZ,WAAY,CACnBsB,QAAQ,CAAEZ,YAAa,CACxB,CAAC,cACFjB,KAAA,QAAKyB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B5B,IAAA,SAAA4B,QAAA,CAAM,GAAC,CAAM,CAAC,cACd5B,IAAA,SAAA4B,QAAA,CAAOrB,QAAQ,CAAO,CAAC,EACpB,CAAC,cACNP,IAAA,QAAK2B,SAAS,CAAC,SAAS,CAACK,KAAK,CAAET,eAAe,CAAC,CAAE,CAAAK,QAAA,CAC/CnB,WAAW,CACT,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}