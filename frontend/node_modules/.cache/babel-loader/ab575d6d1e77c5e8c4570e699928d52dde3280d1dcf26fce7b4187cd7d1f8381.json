{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\Slider1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './sliderStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = ({\n  universities,\n  onRangeChange\n}) => {\n  _s();\n  const [maxmaxRank, setMaxRank] = useState(100);\n  const [sliderValue, setSliderValue] = useState(100);\n  useEffect(() => {\n    if (universities.length > 0) {\n      const maxRanks = universities.map(college => Math.floor(college.maxRank));\n      const maxmaxRank = Math.max(...maxRanks);\n      setMaxRank(maxmaxRank);\n      setSliderValue(prev => prev > maxmaxRank ? maxmaxRank : prev);\n    }\n  }, [universities]);\n  const handleChange = event => {\n    const value = event.target.value;\n    setSliderValue(value);\n    onRangeChange([0, value]);\n  };\n  const getTooltipStyle = () => {\n    const percent = maxmaxRank > 0 ? sliderValue / maxmaxRank * 100 : 0;\n    return {\n      left: `${percent}%`,\n      transform: `translateX(-${percent}%)`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sliderBox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slidecontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: maxmaxRank,\n        className: \"slider\",\n        value: sliderValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rangeValues\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: maxmaxRank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        style: getTooltipStyle(),\n        children: sliderValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"6ngQZdhtDPVWm7S7BNi5kwOLcQw=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Slider","universities","onRangeChange","_s","maxmaxRank","setMaxRank","sliderValue","setSliderValue","length","maxRanks","map","college","Math","floor","maxRank","max","prev","handleChange","event","value","target","getTooltipStyle","percent","left","transform","className","children","type","min","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Slider1.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './sliderStyles.css'; \r\n\r\nconst Slider = ({ universities, onRangeChange }) => {\r\n  const [maxmaxRank, setMaxRank] = useState(100);\r\n  const [sliderValue, setSliderValue] = useState(100);\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const maxRanks = universities.map((college) => Math.floor(college.maxRank));\r\n      const maxmaxRank = Math.max(...maxRanks);\r\n      setMaxRank(maxmaxRank);\r\n      setSliderValue((prev) => (prev > maxmaxRank ? maxmaxRank : prev));\r\n    }\r\n  }, [universities]);\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setSliderValue(value);\r\n    onRangeChange([0, value]);\r\n  };\r\n\r\n  const getTooltipStyle = () => {\r\n    const percent = maxmaxRank > 0 ? (sliderValue / maxmaxRank) * 100 : 0;\r\n    return {\r\n      left: `${percent}%`,\r\n      transform: `translateX(-${percent}%)`,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"sliderBox\">\r\n      <div className=\"slidecontainer\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max={maxmaxRank}\r\n          className=\"slider\"\r\n          value={sliderValue}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"rangeValues\">\r\n          <span>0</span>\r\n          <span>{maxmaxRank}</span>\r\n        </div>\r\n        <div className=\"tooltip\" style={getTooltipStyle()}>\r\n          {sliderValue}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}