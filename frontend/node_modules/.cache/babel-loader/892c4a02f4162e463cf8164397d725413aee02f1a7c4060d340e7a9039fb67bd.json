{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import'./AdminDashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminDashboard=()=>{const[mhtCetFile,setMhtCetFile]=useState(null);const[neetFile,setNeetFile]=useState(null);const[uploading,setUploading]=useState(false);const handleMhtCetFileChange=e=>{setMhtCetFile(e.target.files[0]);};const handleNeetFileChange=e=>{setNeetFile(e.target.files[0]);};const uploadFile=async(file,type)=>{const formData=new FormData();formData.append('csvFile',file);// 'csvFile' should match the multer field name\nsetUploading(true);try{const response=await axios.post(`http://localhost:4000/upload-${type}`,formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.status===200){alert(`${type.toUpperCase()} dataset updated successfully!`);}else{alert(`Failed to upload ${type} dataset.`);}}catch(error){console.error(`Error uploading ${type} file:`,error);alert(`Error uploading ${type} dataset.`);}finally{setUploading(false);}};const handleMhtCetUpload=()=>{if(mhtCetFile){uploadFile(mhtCetFile,'mhtcet');}else{alert('Please select a file to upload for MHT-CET.');}};const handleNeetUpload=()=>{if(neetFile){uploadFile(neetFile,'neet');}else{alert('Please select a file to upload for NEET.');}};// Function to handle downloading of data\nconst downloadData=async type=>{try{const response=await axios.get(`http://localhost:4000/download-${type}`,{responseType:'blob'// Important to handle file downloads\n});// Create a URL for the blob and create a link element to trigger the download\nconst url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download',`${type}_dataset.csv`);// Name of the downloaded file\ndocument.body.appendChild(link);link.click();link.remove();}catch(error){console.error(`Error downloading ${type} data:`,error);alert(`Error downloading ${type} dataset.`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-dashboard\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Update MHT-CET Dataset\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleMhtCetFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleMhtCetUpload,disabled:uploading,children:uploading?'Uploading...':'Upload MHT-CET CSV'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Update NEET Dataset\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleNeetFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNeetUpload,disabled:uploading,children:uploading?'Uploading...':'Upload NEET CSV'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"download-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Download Current Data\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadData('mhtcet'),children:\"Download MHT-CET Dataset\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadData('neet'),children:\"Download NEET Dataset\"})]})]});};export default AdminDashboard;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","AdminDashboard","mhtCetFile","setMhtCetFile","neetFile","setNeetFile","uploading","setUploading","handleMhtCetFileChange","e","target","files","handleNeetFileChange","uploadFile","file","type","formData","FormData","append","response","post","headers","status","alert","toUpperCase","error","console","handleMhtCetUpload","handleNeetUpload","downloadData","get","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","remove","className","children","onChange","onClick","disabled"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/Admindashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const [mhtCetFile, setMhtCetFile] = useState(null);\r\n  const [neetFile, setNeetFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleMhtCetFileChange = (e) => {\r\n    setMhtCetFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleNeetFileChange = (e) => {\r\n    setNeetFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadFile = async (file, type) => {\r\n    const formData = new FormData();\r\n    formData.append('csvFile', file); // 'csvFile' should match the multer field name\r\n\r\n    setUploading(true);\r\n    try {\r\n      const response = await axios.post(`http://localhost:4000/upload-${type}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert(`${type.toUpperCase()} dataset updated successfully!`);\r\n      } else {\r\n        alert(`Failed to upload ${type} dataset.`);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error uploading ${type} file:`, error);\r\n      alert(`Error uploading ${type} dataset.`);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleMhtCetUpload = () => {\r\n    if (mhtCetFile) {\r\n      uploadFile(mhtCetFile, 'mhtcet');\r\n    } else {\r\n      alert('Please select a file to upload for MHT-CET.');\r\n    }\r\n  };\r\n\r\n  const handleNeetUpload = () => {\r\n    if (neetFile) {\r\n      uploadFile(neetFile, 'neet');\r\n    } else {\r\n      alert('Please select a file to upload for NEET.');\r\n    }\r\n  };\r\n\r\n  // Function to handle downloading of data\r\n  const downloadData = async (type) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:4000/download-${type}`, {\r\n        responseType: 'blob', // Important to handle file downloads\r\n      });\r\n\r\n      // Create a URL for the blob and create a link element to trigger the download\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `${type}_dataset.csv`); // Name of the downloaded file\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      console.error(`Error downloading ${type} data:`, error);\r\n      alert(`Error downloading ${type} dataset.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      <div className=\"upload-section\">\r\n        <h3>Update MHT-CET Dataset</h3>\r\n        <input type=\"file\" onChange={handleMhtCetFileChange} />\r\n        <button onClick={handleMhtCetUpload} disabled={uploading}>\r\n          {uploading ? 'Uploading...' : 'Upload MHT-CET CSV'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"upload-section\">\r\n        <h3>Update NEET Dataset</h3>\r\n        <input type=\"file\" onChange={handleNeetFileChange} />\r\n        <button onClick={handleNeetUpload} disabled={uploading}>\r\n          {uploading ? 'Uploading...' : 'Upload NEET CSV'}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"download-section\">\r\n        <h3>Download Current Data</h3>\r\n        <button onClick={() => downloadData('mhtcet')}>\r\n          Download MHT-CET Dataset\r\n        </button>\r\n        <button onClick={() => downloadData('neet')}>\r\n          Download NEET Dataset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}