{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\Neetcard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContainer, CardText, CardTitle, CardSubtitle, CardButton } from './UniversityCard.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NEETCard = ({\n  institute,\n  course,\n  category,\n  minRank,\n  maxRank,\n  onApply\n}) => {\n  _s();\n  const [showFullDetails, setShowFullDetails] = useState(false);\n  const [firstPart, rest] = institute.split(',', 2); // Assuming you want to shorten long institute names similarly\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardText, {\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        children: [firstPart, showFullDetails && `,${rest}`, !showFullDetails && rest && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFullDetails(true),\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          children: \".Read More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Course: \", course]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Category: \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Min Rank: \", minRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n        children: [\"Max Rank: \", maxRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardButton, {\n        onClick: onApply,\n        children: \"VISIT WEB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(NEETCard, \"ksQf+oCUC6AgUUn3yET8GhMZROA=\");\n_c = NEETCard;\nconst NEETCardList = ({\n  universities = []\n}) => {\n  _s2();\n  const [filteredUniversities, setFilteredUniversities] = useState(universities);\n  const handleRangeChange = range => {\n    setFilteredUniversities(universities.filter(college => {\n      const roundedMinRank = Math.floor(college.min_rank);\n      const roundedMaxRank = Math.floor(college.max_rank);\n      return roundedMinRank >= range[0] && roundedMaxRank <= range[1];\n    }));\n  };\n  useEffect(() => {\n    if (universities.length > 0) {\n      const ranks = universities.flatMap(college => [Math.floor(college.min_rank), Math.floor(college.max_rank)]);\n      const maxRank = Math.max(...ranks);\n      handleRangeChange([0, maxRank]); // Set the range for rank filtering\n    }\n  }, [universities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        maxWidth: '600px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        universities: universities,\n        onRangeChange: handleRangeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      children: Array.isArray(filteredUniversities) && filteredUniversities.length > 0 ? filteredUniversities.map(college => /*#__PURE__*/_jsxDEV(NEETCard, {\n        institute: college['Allotted Institute'],\n        course: college['Course'],\n        category: college['Alloted Category'],\n        minRank: Math.floor(college['min_rank']) // Ensure displayed rank is an integer\n        ,\n        maxRank: Math.floor(college['max_rank']),\n        onApply: () => {\n          const url = \"https://example.com\"; // Replace with actual URL if available\n          const formattedURL = url.startsWith('http://') || url.startsWith('https://') ? url : `http://${url}`;\n          window.open(formattedURL, '_blank');\n        }\n      }, college['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No institutes found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(NEETCardList, \"f4gFWJaCJMJg+0AwV+WmWaJuoGU=\");\n_c2 = NEETCardList;\nexport default NEETCardList;\nvar _c, _c2;\n$RefreshReg$(_c, \"NEETCard\");\n$RefreshReg$(_c2, \"NEETCardList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContainer","CardText","CardTitle","CardSubtitle","CardButton","jsxDEV","_jsxDEV","NEETCard","institute","course","category","minRank","maxRank","onApply","_s","showFullDetails","setShowFullDetails","firstPart","rest","split","children","onClick","style","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","NEETCardList","universities","_s2","filteredUniversities","setFilteredUniversities","handleRangeChange","range","filter","college","roundedMinRank","Math","floor","min_rank","roundedMaxRank","max_rank","length","ranks","flatMap","max","display","flexDirection","alignItems","width","maxWidth","marginBottom","Slider","onRangeChange","Array","isArray","map","url","formattedURL","startsWith","window","open","_c2","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Neetcard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardContainer,\r\n  CardText,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardButton\r\n} from './UniversityCard.styles';\r\n\r\nconst NEETCard = ({ institute, course, category, minRank, maxRank, onApply }) => {\r\n  const [showFullDetails, setShowFullDetails] = useState(false);\r\n  const [firstPart, rest] = institute.split(',', 2); // Assuming you want to shorten long institute names similarly\r\n\r\n  return (\r\n    <Card>\r\n      <CardText>\r\n        <CardTitle>\r\n          {firstPart}\r\n          {showFullDetails && `,${rest}`}\r\n          {!showFullDetails && rest && (\r\n            <button\r\n              onClick={() => setShowFullDetails(true)}\r\n              style={{ color: 'blue', cursor: 'pointer' }}\r\n            >\r\n              .Read More\r\n            </button>\r\n          )}\r\n        </CardTitle>\r\n        <CardSubtitle>Course: {course}</CardSubtitle>\r\n        <CardSubtitle>Category: {category}</CardSubtitle>\r\n        <CardSubtitle>Min Rank: {minRank}</CardSubtitle>\r\n        <CardSubtitle>Max Rank: {maxRank}</CardSubtitle>\r\n        <CardButton onClick={onApply}>VISIT WEB</CardButton>\r\n      </CardText>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst NEETCardList = ({ universities = [] }) => {\r\n  const [filteredUniversities, setFilteredUniversities] = useState(universities);\r\n\r\n  const handleRangeChange = (range) => {\r\n    setFilteredUniversities(\r\n      universities.filter((college) => {\r\n        const roundedMinRank = Math.floor(college.min_rank);\r\n        const roundedMaxRank = Math.floor(college.max_rank);\r\n        return (\r\n          roundedMinRank >= range[0] &&\r\n          roundedMaxRank <= range[1]\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const ranks = universities.flatMap(college => [Math.floor(college.min_rank), Math.floor(college.max_rank)]);\r\n      const maxRank = Math.max(...ranks);\r\n      handleRangeChange([0, maxRank]); // Set the range for rank filtering\r\n    }\r\n  }, [universities]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      {/* Slider Section */}\r\n      <div style={{ width: '100%', maxWidth: '600px', marginBottom: '20px' }}>\r\n        <Slider universities={universities} onRangeChange={handleRangeChange} />\r\n      </div>\r\n      \r\n      <CardContainer>\r\n        {Array.isArray(filteredUniversities) && filteredUniversities.length > 0 ? (\r\n          filteredUniversities.map((college) => (\r\n            <NEETCard\r\n              key={college['_id']}\r\n              institute={college['Allotted Institute']}\r\n              course={college['Course']}\r\n              category={college['Alloted Category']}\r\n              minRank={Math.floor(college['min_rank'])} // Ensure displayed rank is an integer\r\n              maxRank={Math.floor(college['max_rank'])}\r\n              onApply={() => {\r\n                const url = \"https://example.com\"; // Replace with actual URL if available\r\n                const formattedURL =\r\n                  url.startsWith('http://') || url.startsWith('https://')\r\n                    ? url\r\n                    : `http://${url}`;\r\n                window.open(formattedURL, '_blank');\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No institutes found</p>\r\n        )}\r\n      </CardContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NEETCardList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}