{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginTypeSelector = ({\n  type,\n  handleLoginTypeChange\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"login-type\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"student\",\n      checked: type === 'student',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"Student\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      value: \"admin\",\n      checked: type === 'admin',\n      onChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"Admin\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = LoginTypeSelector;\nconst LoginForm = ({\n  isRegistering,\n  email,\n  setEmail,\n  password,\n  setPassword,\n  name,\n  setName,\n  course,\n  setCourse,\n  percentile,\n  setPercentile,\n  handleFormSubmit,\n  isLoading\n}) => /*#__PURE__*/_jsxDEV(\"form\", {\n  className: \"login-form\",\n  onSubmit: handleFormSubmit,\n  children: [isRegistering && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"Course\",\n      value: course,\n      onChange: e => setCourse(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      type: \"number\",\n      placeholder: \"Percentile\",\n      value: percentile,\n      onChange: e => setPercentile(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    required: true,\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: e => setPassword(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    children: isRegistering ? 'Register' : 'Login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 19\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this);\n_c2 = LoginForm;\nconst LoginModal = ({\n  onLogin\n}) => {\n  _s();\n  const [type, setType] = useState('student');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [course, setCourse] = useState('');\n  const [percentile, setPercentile] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleLoginTypeChange = e => setType(e.target.value);\n  const handleFormSubmit = async e => {\n    e.preventDefault(); // Prevent page refresh on form submission\n    setIsLoading(true);\n    try {\n      if (isRegistering) {\n        // Registration logic\n        const formData = {\n          name,\n          email,\n          password,\n          type,\n          course,\n          percentile: parseInt(percentile, 10)\n        };\n        const response = await fetch('http://localhost:4000/api/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert('Registered successfully!');\n          onLogin(data.user); // Triggering onLogin after registration\n          navigate('/'); // Redirect to home after success\n        } else {\n          alert('Registration failed: ' + data.message);\n        }\n      } else {\n        // Login logic\n        const logindata = await loginUser({\n          email,\n          password,\n          type\n        });\n        if (logindata.success && logindata.user.type === type) {\n          localStorage.setItem('user', JSON.stringify(logindata.user));\n          onLogin(logindata.user); // Triggering onLogin after login\n\n          if (logindata.user.type === 'admin') {\n            navigate('/admin', {\n              replace: true\n            });\n          } else {\n            navigate('/', {\n              replace: true\n            });\n          }\n        } else {\n          alert('Login failed! Invalid credentials.');\n        }\n      }\n    } catch (error) {\n      console.error('Error during login or registration:', error);\n      alert('An error occurred. Please check your server logs.');\n    }\n    setIsLoading(false);\n  };\n  const loginUser = async userData => {\n    try {\n      const response = await fetch('http://localhost:4000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      return await response.json();\n    } catch (error) {\n      console.error('Error during login:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginTypeSelector, {\n      type: type,\n      handleLoginTypeChange: handleLoginTypeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      isRegistering: isRegistering,\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      name: name,\n      setName: setName,\n      course: course,\n      setCourse: setCourse,\n      percentile: percentile,\n      setPercentile: setPercentile,\n      handleFormSubmit: handleFormSubmit,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: e => {\n        e.preventDefault();\n        setIsRegistering(!isRegistering);\n      },\n      style: {\n        cursor: 'pointer',\n        color: '#007bff',\n        textDecoration: 'underline'\n      },\n      children: isRegistering ? 'Already have an account? Login' : 'New here? Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"m4Jvle+w0eYwdH+ICEiESh6t614=\", false, function () {\n  return [useNavigate];\n});\n_c3 = LoginModal;\nexport default LoginModal;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginTypeSelector\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"LoginModal\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginTypeSelector","type","handleLoginTypeChange","className","children","value","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginForm","isRegistering","email","setEmail","password","setPassword","name","setName","course","setCourse","percentile","setPercentile","handleFormSubmit","isLoading","onSubmit","required","placeholder","e","target","disabled","_c2","LoginModal","onLogin","_s","setType","setIsRegistering","setIsLoading","navigate","preventDefault","formData","parseInt","response","fetch","method","headers","body","JSON","stringify","data","json","success","alert","user","message","logindata","loginUser","localStorage","setItem","replace","error","console","userData","ok","Error","status","href","onClick","style","cursor","color","textDecoration","_c3","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginModal.css';\r\n\r\nconst LoginTypeSelector = ({ type, handleLoginTypeChange }) => (\r\n  <div className=\"login-type\">\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"student\"\r\n        checked={type === 'student'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Student\r\n    </label>\r\n    <label>\r\n      <input\r\n        type=\"radio\"\r\n        value=\"admin\"\r\n        checked={type === 'admin'}\r\n        onChange={handleLoginTypeChange}\r\n      />\r\n      Admin\r\n    </label>\r\n  </div>\r\n);\r\n\r\nconst LoginForm = ({\r\n  isRegistering,\r\n  email,\r\n  setEmail,\r\n  password,\r\n  setPassword,\r\n  name,\r\n  setName,\r\n  course,\r\n  setCourse,\r\n  percentile,\r\n  setPercentile,\r\n  handleFormSubmit,\r\n  isLoading,\r\n}) => (\r\n  <form className=\"login-form\" onSubmit={handleFormSubmit}>\r\n    {isRegistering && (\r\n      <>\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          placeholder=\"Course\"\r\n          value={course}\r\n          onChange={(e) => setCourse(e.target.value)}\r\n        />\r\n        <input\r\n          required\r\n          type=\"number\"\r\n          placeholder=\"Percentile\"\r\n          value={percentile}\r\n          onChange={(e) => setPercentile(e.target.value)}\r\n        />\r\n      </>\r\n    )}\r\n    <input\r\n      required\r\n      type=\"email\"\r\n      placeholder=\"Email\"\r\n      value={email}\r\n      onChange={(e) => setEmail(e.target.value)}\r\n    />\r\n    <input\r\n      required\r\n      type=\"password\"\r\n      placeholder=\"Password\"\r\n      value={password}\r\n      onChange={(e) => setPassword(e.target.value)}\r\n    />\r\n    <button type=\"submit\" disabled={isLoading}>\r\n      {isRegistering ? 'Register' : 'Login'}\r\n    </button>\r\n    {isLoading && <p>Loading...</p>}\r\n  </form>\r\n);\r\n\r\nconst LoginModal = ({ onLogin }) => {\r\n  const [type, setType] = useState('student');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [course, setCourse] = useState('');\r\n  const [percentile, setPercentile] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginTypeChange = (e) => setType(e.target.value);\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent page refresh on form submission\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      if (isRegistering) {\r\n        // Registration logic\r\n        const formData = { name, email, password, type, course, percentile: parseInt(percentile, 10) };\r\n        const response = await fetch('http://localhost:4000/api/register', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(formData),\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          alert('Registered successfully!');\r\n          onLogin(data.user);  // Triggering onLogin after registration\r\n          navigate('/');  // Redirect to home after success\r\n        } else {\r\n          alert('Registration failed: ' + data.message);\r\n        }\r\n      } else {\r\n        // Login logic\r\n        const logindata = await loginUser({ email, password, type });\r\n\r\n        if (logindata.success && logindata.user.type === type) {\r\n          localStorage.setItem('user', JSON.stringify(logindata.user));\r\n          onLogin(logindata.user);  // Triggering onLogin after login\r\n\r\n          if (logindata.user.type === 'admin') {\r\n            navigate('/admin', { replace: true });\r\n          } else {\r\n            navigate('/', { replace: true });\r\n          }\r\n        } else {\r\n          alert('Login failed! Invalid credentials.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login or registration:', error);\r\n      alert('An error occurred. Please check your server logs.');\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const loginUser = async (userData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:4000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-modal\">\r\n      <h2>{isRegistering ? 'Register' : 'Login'}</h2>\r\n      <LoginTypeSelector type={type} handleLoginTypeChange={handleLoginTypeChange} />\r\n      <LoginForm\r\n        isRegistering={isRegistering}\r\n        email={email}\r\n        setEmail={setEmail}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        name={name}\r\n        setName={setName}\r\n        course={course}\r\n        setCourse={setCourse}\r\n        percentile={percentile}\r\n        setPercentile={setPercentile}\r\n        handleFormSubmit={handleFormSubmit}\r\n        isLoading={isLoading}\r\n      />\r\n      <a\r\n        href=\"/\"\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setIsRegistering(!isRegistering);\r\n        }}\r\n        style={{ cursor: 'pointer', color: '#007bff', textDecoration: 'underline' }}\r\n      >\r\n        {isRegistering ? 'Already have an account? Login' : 'New here? Register'}\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}