{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\components\\\\Home\\\\Slider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactSlider from 'react-slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sliderStyles = {\n  slidecontainer: {\n    width: '100%',\n    margin: '0 auto'\n  },\n  slider: {\n    WebkitAppearance: 'none',\n    /* Override default CSS styles */\n    appearance: 'none',\n    width: '100%',\n    /* Full-width */\n    height: '20px',\n    /* Specified height */\n    background: '#d3d3d3',\n    /* Grey background */\n    outline: 'none',\n    /* Remove outline */\n    opacity: '0.7',\n    /* Set transparency */\n    transition: 'opacity .2s' /* Transition on hover */\n  },\n  thumb: {\n    WebkitAppearance: 'none',\n    /* Override default look */\n    appearance: 'none',\n    width: '20px',\n    /* Handle width */\n    height: '25px',\n    /* Handle height */\n    background: '#04AA6D',\n    /* Green background */\n    cursor: 'pointer',\n    /* Cursor on hover */\n    borderRadius: '50%',\n    position: 'relative',\n    top: '-5px' /* Adjust the position of the thumb */\n  },\n  rangeValues: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    fontSize: '14px',\n    marginTop: '10px'\n  }\n};\nconst Slider = ({\n  universities,\n  onRangeChange\n}) => {\n  _s();\n  const [percentileRange, setPercentileRange] = useState([0, 100]);\n  useEffect(() => {\n    if (universities.length > 0) {\n      const percentiles = universities.map(college => Math.floor(college.percentile));\n      const minPercentile = Math.min(...percentiles);\n      const maxPercentile = Math.max(...percentiles);\n      setPercentileRange([minPercentile, maxPercentile]);\n    }\n  }, [universities]);\n  useEffect(() => {\n    onRangeChange(percentileRange);\n  }, [percentileRange, onRangeChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: sliderStyles.slidecontainer,\n    children: [/*#__PURE__*/_jsxDEV(ReactSlider, {\n      min: percentileRange[0],\n      max: percentileRange[1],\n      value: percentileRange[0] // Single value slider\n      ,\n      onChange: value => {\n        setPercentileRange([value, percentileRange[1]]);\n        onRangeChange([value, percentileRange[1]]);\n      },\n      renderTrack: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        style: sliderStyles.slider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this),\n      renderThumb: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...props,\n        style: sliderStyles.thumb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: sliderStyles.rangeValues,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: percentileRange[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: percentileRange[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"HBf2baLKrWnOlWmNMTEq2A+J0Bw=\");\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","ReactSlider","jsxDEV","_jsxDEV","sliderStyles","slidecontainer","width","margin","slider","WebkitAppearance","appearance","height","background","outline","opacity","transition","thumb","cursor","borderRadius","position","top","rangeValues","display","justifyContent","fontSize","marginTop","Slider","universities","onRangeChange","_s","percentileRange","setPercentileRange","length","percentiles","map","college","Math","floor","percentile","minPercentile","min","maxPercentile","max","style","children","value","onChange","renderTrack","props","fileName","_jsxFileName","lineNumber","columnNumber","renderThumb","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/Home/Slider.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactSlider from 'react-slider';\r\n\r\nconst sliderStyles = {\r\n  slidecontainer: {\r\n    width: '100%',\r\n    margin: '0 auto',\r\n  },\r\n  slider: {\r\n    WebkitAppearance: 'none', /* Override default CSS styles */\r\n    appearance: 'none',\r\n    width: '100%', /* Full-width */\r\n    height: '20px', /* Specified height */\r\n    background: '#d3d3d3', /* Grey background */\r\n    outline: 'none', /* Remove outline */\r\n    opacity: '0.7', /* Set transparency */\r\n    transition: 'opacity .2s', /* Transition on hover */\r\n  },\r\n  thumb: {\r\n    WebkitAppearance: 'none', /* Override default look */\r\n    appearance: 'none',\r\n    width: '20px', /* Handle width */\r\n    height: '25px', /* Handle height */\r\n    background: '#04AA6D', /* Green background */\r\n    cursor: 'pointer', /* Cursor on hover */\r\n    borderRadius: '50%',\r\n    position: 'relative',\r\n    top: '-5px', /* Adjust the position of the thumb */\r\n  },\r\n  rangeValues: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    fontSize: '14px',\r\n    marginTop: '10px',\r\n  },\r\n};\r\n\r\nconst Slider = ({ universities, onRangeChange }) => {\r\n  const [percentileRange, setPercentileRange] = useState([0, 100]);\r\n\r\n  useEffect(() => {\r\n    if (universities.length > 0) {\r\n      const percentiles = universities.map((college) => Math.floor(college.percentile));\r\n      const minPercentile = Math.min(...percentiles);\r\n      const maxPercentile = Math.max(...percentiles);\r\n      setPercentileRange([minPercentile, maxPercentile]);\r\n    }\r\n  }, [universities]);\r\n\r\n  useEffect(() => {\r\n    onRangeChange(percentileRange);\r\n  }, [percentileRange, onRangeChange]);\r\n\r\n  return (\r\n    <div style={sliderStyles.slidecontainer}>\r\n      <ReactSlider\r\n        min={percentileRange[0]}\r\n        max={percentileRange[1]}\r\n        value={percentileRange[0]} // Single value slider\r\n        onChange={(value) => {\r\n          setPercentileRange([value, percentileRange[1]]);\r\n          onRangeChange([value, percentileRange[1]]);\r\n        }}\r\n        renderTrack={(props) => <div {...props} style={sliderStyles.slider} />}\r\n        renderThumb={(props) => <div {...props} style={sliderStyles.thumb} />}\r\n      />\r\n      <div style={sliderStyles.rangeValues}>\r\n        <span>{percentileRange[0]}</span>\r\n        <span>{percentileRange[1]}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}