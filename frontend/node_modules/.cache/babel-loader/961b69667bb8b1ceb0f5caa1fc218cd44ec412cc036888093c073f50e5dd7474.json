{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";// Import PropTypes\nconst ProtectedRoute=_ref=>{let{children}=_ref;const{user,isLoading}=useAuth();// Ensure isLoading is part of the auth context\nif(isLoading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// Show a loading state while checking authentication\n}if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});// Redirect to login page if not logged in\n}return children;// Render children if user is authenticated\n};// Adding prop types for validation\nexport default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","user","isLoading","to","replace"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport PropTypes from 'prop-types'; // Import PropTypes\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, isLoading } = useAuth(); // Ensure isLoading is part of the auth context\r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>; // Show a loading state while checking authentication\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/\" replace />; // Redirect to login page if not logged in\r\n  }\r\n\r\n  return children; // Render children if user is authenticated\r\n};\r\n\r\n// Adding prop types for validation\r\nProtectedRoute.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBACb;AAEpC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,IAAI,CAAEC,SAAU,CAAC,CAAGP,OAAO,CAAC,CAAC,CAAE;AAEvC,GAAIO,SAAS,CAAE,CACb,mBAAOL,IAAA,MAAAG,QAAA,CAAG,YAAU,CAAG,CAAC,CAAE;AAC5B,CAEA,GAAI,CAACC,IAAI,CAAE,CACT,mBAAOJ,IAAA,CAACH,QAAQ,EAACS,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CAAE;AACtC,CAEA,MAAO,CAAAJ,QAAQ,CAAE;AACnB,CAAC,CAED;AAKA,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}