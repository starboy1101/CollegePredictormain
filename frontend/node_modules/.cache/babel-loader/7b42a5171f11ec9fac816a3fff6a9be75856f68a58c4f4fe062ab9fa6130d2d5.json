{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omkar\\\\OneDrive\\\\Documents\\\\GitHub\\\\CollegePredictormain\\\\frontend\\\\src\\\\MyRoutes.js\",\n  _s = $RefreshSig$();\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Admportal from \"./Pages/admportal\";\nimport Collpred from \"./Pages/Collpred\";\nimport LoginForm from \"./LoginPage\";\nimport Neetpred from \"./Pages/Neetpred\";\nimport AdminDashboard from \"./Admindashboard\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyRoutes() {\n  _s();\n  // This is a placeholder for the actual authentication state\n  // Replace this with actual authentication logic, such as context or Redux store\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Update this after login\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/home\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admportal\",\n      element: /*#__PURE__*/_jsxDEV(Admportal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/collpred\",\n        element: /*#__PURE__*/_jsxDEV(Collpred, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/neetpred\",\n        element: /*#__PURE__*/_jsxDEV(Neetpred, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) :\n    /*#__PURE__*/\n    // Redirect to login if not logged in and trying to access protected routes\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/collpred\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/neetpred\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MyRoutes, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = MyRoutes;\nvar _c;\n$RefreshReg$(_c, \"MyRoutes\");","map":{"version":3,"names":["Route","Routes","Navigate","Home","Admportal","Collpred","LoginForm","Neetpred","AdminDashboard","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MyRoutes","_s","isLoggedIn","setIsLoggedIn","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/CollegePredictormain/frontend/src/MyRoutes.js"],"sourcesContent":["import { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home\";\r\nimport Admportal from \"./Pages/admportal\";\r\nimport Collpred from \"./Pages/Collpred\";\r\nimport LoginForm from \"./LoginPage\";\r\nimport Neetpred from \"./Pages/Neetpred\";\r\nimport AdminDashboard from \"./Admindashboard\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function MyRoutes() {\r\n  // This is a placeholder for the actual authentication state\r\n  // Replace this with actual authentication logic, such as context or Redux store\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Update this after login\r\n\r\n  return (\r\n    <Routes>\r\n      {/* Public routes: accessible without login */}\r\n      <Route path=\"/\" element={<Navigate to=\"/home\" />} />\r\n      <Route path=\"/home\" element={<Home />} />\r\n      <Route path=\"/admportal\" element={<Admportal />} />\r\n      <Route path=\"/login\" element={<LoginForm />} />\r\n\r\n      {/* Protected routes: require login */}\r\n      {isLoggedIn ? (\r\n        <>\r\n          <Route path=\"/collpred\" element={<Collpred />} />\r\n          <Route path=\"/neetpred\" element={<Neetpred />} />\r\n          <Route path=\"/admin\" element={<AdminDashboard />} />\r\n        </>\r\n      ) : (\r\n        // Redirect to login if not logged in and trying to access protected routes\r\n        <>\r\n          <Route path=\"/collpred\" element={<Navigate to=\"/login\" />} />\r\n          <Route path=\"/neetpred\" element={<Navigate to=\"/login\" />} />\r\n          <Route path=\"/admin\" element={<Navigate to=\"/login\" />} />\r\n        </>\r\n      )}\r\n    </Routes>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}